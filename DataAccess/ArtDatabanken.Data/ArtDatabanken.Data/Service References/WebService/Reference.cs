//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#pragma warning disable 1570
#pragma warning disable 1571
#pragma warning disable 1572
#pragma warning disable 1573
#pragma warning disable 1587
#pragma warning disable 1591

namespace ArtDatabanken.Data.WebService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebData", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebBirdNestActivity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebCity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebCounty))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebDatabase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebDatabaseUpdate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebEndangeredList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebFactorDataType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebFactorField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebFactorFieldEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebFactorFieldEnumValue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebFactorFieldType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebFactorOrigin))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebFactor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebFactorSearchCriteria))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebFactorTreeNode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebFactorTreeSearchCriteria))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebFactorUpdateMode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebTaxon))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebIndividualCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebLogRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebPeriod))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebPeriodType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebProvince))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebSpeciesFactQuality))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebSpeciesFact))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebUserParameterSelection))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebSpeciesObservation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebSpeciesObservationSearchCriteria))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebSpeciesObservationInformation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebResourceStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebResourceType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebDataQuery))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebDataCondition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebDataLogicCondition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebSpeciesFactCondition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebSpeciesFactFieldCondition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebDataConversion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebDataLimitation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebDataIdentifier))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebTaxonSearchCriteria))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebTaxonCountyOccurrence))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebTaxonName))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebTaxonNameSearchCriteria))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebTaxonNameType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebTaxonNameUseType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebTaxonTreeSearchCriteria))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebTaxonTreeNode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebTaxonType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebUserRole))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ArtDatabanken.Data.WebService.WebReference))]
    public partial class WebData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebDataField> DataFieldsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebDataField> DataFields {
            get {
                return this.DataFieldsField;
            }
            set {
                if ((object.ReferenceEquals(this.DataFieldsField, value) != true)) {
                    this.DataFieldsField = value;
                    this.RaisePropertyChanged("DataFields");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebBirdNestActivity", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebBirdNestActivity : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebCity", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebCity : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MunicipalityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParishField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int XCoordinateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YCoordinateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string County {
            get {
                return this.CountyField;
            }
            set {
                if ((object.ReferenceEquals(this.CountyField, value) != true)) {
                    this.CountyField = value;
                    this.RaisePropertyChanged("County");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Municipality {
            get {
                return this.MunicipalityField;
            }
            set {
                if ((object.ReferenceEquals(this.MunicipalityField, value) != true)) {
                    this.MunicipalityField = value;
                    this.RaisePropertyChanged("Municipality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Parish {
            get {
                return this.ParishField;
            }
            set {
                if ((object.ReferenceEquals(this.ParishField, value) != true)) {
                    this.ParishField = value;
                    this.RaisePropertyChanged("Parish");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int XCoordinate {
            get {
                return this.XCoordinateField;
            }
            set {
                if ((this.XCoordinateField.Equals(value) != true)) {
                    this.XCoordinateField = value;
                    this.RaisePropertyChanged("XCoordinate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int YCoordinate {
            get {
                return this.YCoordinateField;
            }
            set {
                if ((this.YCoordinateField.Equals(value) != true)) {
                    this.YCoordinateField = value;
                    this.RaisePropertyChanged("YCoordinate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebCounty", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebCounty : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCountyPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsNumberSpecifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PartOfCountyIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Identifier {
            get {
                return this.IdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.IdentifierField, value) != true)) {
                    this.IdentifierField = value;
                    this.RaisePropertyChanged("Identifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCountyPart {
            get {
                return this.IsCountyPartField;
            }
            set {
                if ((this.IsCountyPartField.Equals(value) != true)) {
                    this.IsCountyPartField = value;
                    this.RaisePropertyChanged("IsCountyPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNumberSpecified {
            get {
                return this.IsNumberSpecifiedField;
            }
            set {
                if ((this.IsNumberSpecifiedField.Equals(value) != true)) {
                    this.IsNumberSpecifiedField = value;
                    this.RaisePropertyChanged("IsNumberSpecified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PartOfCountyId {
            get {
                return this.PartOfCountyIdField;
            }
            set {
                if ((this.PartOfCountyIdField.Equals(value) != true)) {
                    this.PartOfCountyIdField = value;
                    this.RaisePropertyChanged("PartOfCountyId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebDatabase", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebDatabase : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LongNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LongName {
            get {
                return this.LongNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LongNameField, value) != true)) {
                    this.LongNameField = value;
                    this.RaisePropertyChanged("LongName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortName {
            get {
                return this.ShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortNameField, value) != true)) {
                    this.ShortNameField = value;
                    this.RaisePropertyChanged("ShortName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebDatabaseUpdate", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebDatabaseUpdate : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdateEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdateStartField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdateEnd {
            get {
                return this.UpdateEndField;
            }
            set {
                if ((this.UpdateEndField.Equals(value) != true)) {
                    this.UpdateEndField = value;
                    this.RaisePropertyChanged("UpdateEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdateStart {
            get {
                return this.UpdateStartField;
            }
            set {
                if ((this.UpdateStartField.Equals(value) != true)) {
                    this.UpdateStartField = value;
                    this.RaisePropertyChanged("UpdateStart");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebEndangeredList", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebEndangeredList : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebFactorDataType", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebFactorDataType : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefinitionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebFactorField> FieldsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Definition {
            get {
                return this.DefinitionField;
            }
            set {
                if ((object.ReferenceEquals(this.DefinitionField, value) != true)) {
                    this.DefinitionField = value;
                    this.RaisePropertyChanged("Definition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebFactorField> Fields {
            get {
                return this.FieldsField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldsField, value) != true)) {
                    this.FieldsField = value;
                    this.RaisePropertyChanged("Fields");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebFactorField", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebFactorField : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DatabaseFieldNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FactorDataTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FactorFieldEnumIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSubstantialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitLabelField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DatabaseFieldName {
            get {
                return this.DatabaseFieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DatabaseFieldNameField, value) != true)) {
                    this.DatabaseFieldNameField = value;
                    this.RaisePropertyChanged("DatabaseFieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FactorDataTypeId {
            get {
                return this.FactorDataTypeIdField;
            }
            set {
                if ((this.FactorDataTypeIdField.Equals(value) != true)) {
                    this.FactorDataTypeIdField = value;
                    this.RaisePropertyChanged("FactorDataTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FactorFieldEnumId {
            get {
                return this.FactorFieldEnumIdField;
            }
            set {
                if ((this.FactorFieldEnumIdField.Equals(value) != true)) {
                    this.FactorFieldEnumIdField = value;
                    this.RaisePropertyChanged("FactorFieldEnumId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Information {
            get {
                return this.InformationField;
            }
            set {
                if ((object.ReferenceEquals(this.InformationField, value) != true)) {
                    this.InformationField = value;
                    this.RaisePropertyChanged("Information");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMain {
            get {
                return this.IsMainField;
            }
            set {
                if ((this.IsMainField.Equals(value) != true)) {
                    this.IsMainField = value;
                    this.RaisePropertyChanged("IsMain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSubstantial {
            get {
                return this.IsSubstantialField;
            }
            set {
                if ((this.IsSubstantialField.Equals(value) != true)) {
                    this.IsSubstantialField = value;
                    this.RaisePropertyChanged("IsSubstantial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Label {
            get {
                return this.LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelField, value) != true)) {
                    this.LabelField = value;
                    this.RaisePropertyChanged("Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Size {
            get {
                return this.SizeField;
            }
            set {
                if ((this.SizeField.Equals(value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TypeId {
            get {
                return this.TypeIdField;
            }
            set {
                if ((this.TypeIdField.Equals(value) != true)) {
                    this.TypeIdField = value;
                    this.RaisePropertyChanged("TypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnitLabel {
            get {
                return this.UnitLabelField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitLabelField, value) != true)) {
                    this.UnitLabelField = value;
                    this.RaisePropertyChanged("UnitLabel");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebFactorFieldEnum", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebFactorFieldEnum : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebFactorFieldEnumValue> ValuesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebFactorFieldEnumValue> Values {
            get {
                return this.ValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.ValuesField, value) != true)) {
                    this.ValuesField = value;
                    this.RaisePropertyChanged("Values");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebFactorFieldEnumValue", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebFactorFieldEnumValue : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FactorFieldEnumIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsKeyIntegerSpecifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int KeyIntegerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShouldBeSavedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SortOrderField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FactorFieldEnumId {
            get {
                return this.FactorFieldEnumIdField;
            }
            set {
                if ((this.FactorFieldEnumIdField.Equals(value) != true)) {
                    this.FactorFieldEnumIdField = value;
                    this.RaisePropertyChanged("FactorFieldEnumId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Information {
            get {
                return this.InformationField;
            }
            set {
                if ((object.ReferenceEquals(this.InformationField, value) != true)) {
                    this.InformationField = value;
                    this.RaisePropertyChanged("Information");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsKeyIntegerSpecified {
            get {
                return this.IsKeyIntegerSpecifiedField;
            }
            set {
                if ((this.IsKeyIntegerSpecifiedField.Equals(value) != true)) {
                    this.IsKeyIntegerSpecifiedField = value;
                    this.RaisePropertyChanged("IsKeyIntegerSpecified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int KeyInteger {
            get {
                return this.KeyIntegerField;
            }
            set {
                if ((this.KeyIntegerField.Equals(value) != true)) {
                    this.KeyIntegerField = value;
                    this.RaisePropertyChanged("KeyInteger");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeyText {
            get {
                return this.KeyTextField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyTextField, value) != true)) {
                    this.KeyTextField = value;
                    this.RaisePropertyChanged("KeyText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Label {
            get {
                return this.LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelField, value) != true)) {
                    this.LabelField = value;
                    this.RaisePropertyChanged("Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShouldBeSaved {
            get {
                return this.ShouldBeSavedField;
            }
            set {
                if ((this.ShouldBeSavedField.Equals(value) != true)) {
                    this.ShouldBeSavedField = value;
                    this.RaisePropertyChanged("ShouldBeSaved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SortOrder {
            get {
                return this.SortOrderField;
            }
            set {
                if ((this.SortOrderField.Equals(value) != true)) {
                    this.SortOrderField = value;
                    this.RaisePropertyChanged("SortOrder");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebFactorFieldType", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebFactorFieldType : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefinitionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Definition {
            get {
                return this.DefinitionField;
            }
            set {
                if ((object.ReferenceEquals(this.DefinitionField, value) != true)) {
                    this.DefinitionField = value;
                    this.RaisePropertyChanged("Definition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebFactorOrigin", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebFactorOrigin : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefinitionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SortOrderField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Definition {
            get {
                return this.DefinitionField;
            }
            set {
                if ((object.ReferenceEquals(this.DefinitionField, value) != true)) {
                    this.DefinitionField = value;
                    this.RaisePropertyChanged("Definition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SortOrder {
            get {
                return this.SortOrderField;
            }
            set {
                if ((this.SortOrderField.Equals(value) != true)) {
                    this.SortOrderField = value;
                    this.RaisePropertyChanged("SortOrder");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebFactor", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebFactor : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DefaultHostParentTaxonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FactorDataTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FactorOriginIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FactorUpdateModeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostLabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLeafField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPeriodicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPublicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTaxonomicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SortOrderField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DefaultHostParentTaxonId {
            get {
                return this.DefaultHostParentTaxonIdField;
            }
            set {
                if ((this.DefaultHostParentTaxonIdField.Equals(value) != true)) {
                    this.DefaultHostParentTaxonIdField = value;
                    this.RaisePropertyChanged("DefaultHostParentTaxonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FactorDataTypeId {
            get {
                return this.FactorDataTypeIdField;
            }
            set {
                if ((this.FactorDataTypeIdField.Equals(value) != true)) {
                    this.FactorDataTypeIdField = value;
                    this.RaisePropertyChanged("FactorDataTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FactorOriginId {
            get {
                return this.FactorOriginIdField;
            }
            set {
                if ((this.FactorOriginIdField.Equals(value) != true)) {
                    this.FactorOriginIdField = value;
                    this.RaisePropertyChanged("FactorOriginId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FactorUpdateModeId {
            get {
                return this.FactorUpdateModeIdField;
            }
            set {
                if ((this.FactorUpdateModeIdField.Equals(value) != true)) {
                    this.FactorUpdateModeIdField = value;
                    this.RaisePropertyChanged("FactorUpdateModeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HostLabel {
            get {
                return this.HostLabelField;
            }
            set {
                if ((object.ReferenceEquals(this.HostLabelField, value) != true)) {
                    this.HostLabelField = value;
                    this.RaisePropertyChanged("HostLabel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Information {
            get {
                return this.InformationField;
            }
            set {
                if ((object.ReferenceEquals(this.InformationField, value) != true)) {
                    this.InformationField = value;
                    this.RaisePropertyChanged("Information");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLeaf {
            get {
                return this.IsLeafField;
            }
            set {
                if ((this.IsLeafField.Equals(value) != true)) {
                    this.IsLeafField = value;
                    this.RaisePropertyChanged("IsLeaf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPeriodic {
            get {
                return this.IsPeriodicField;
            }
            set {
                if ((this.IsPeriodicField.Equals(value) != true)) {
                    this.IsPeriodicField = value;
                    this.RaisePropertyChanged("IsPeriodic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPublic {
            get {
                return this.IsPublicField;
            }
            set {
                if ((this.IsPublicField.Equals(value) != true)) {
                    this.IsPublicField = value;
                    this.RaisePropertyChanged("IsPublic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTaxonomic {
            get {
                return this.IsTaxonomicField;
            }
            set {
                if ((this.IsTaxonomicField.Equals(value) != true)) {
                    this.IsTaxonomicField = value;
                    this.RaisePropertyChanged("IsTaxonomic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Label {
            get {
                return this.LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelField, value) != true)) {
                    this.LabelField = value;
                    this.RaisePropertyChanged("Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SortOrder {
            get {
                return this.SortOrderField;
            }
            set {
                if ((this.SortOrderField.Equals(value) != true)) {
                    this.SortOrderField = value;
                    this.RaisePropertyChanged("SortOrder");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebFactorSearchCriteria", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebFactorSearchCriteria : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsIdInNameSearchStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ArtDatabanken.Data.WebService.SearchStringComparisonMethod NameSearchMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameSearchStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ArtDatabanken.Data.WebService.FactorSearchScope RestrictReturnToScopeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<int> RestrictSearchToFactorIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ArtDatabanken.Data.WebService.FactorSearchScope RestrictSearchToScopeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsIdInNameSearchString {
            get {
                return this.IsIdInNameSearchStringField;
            }
            set {
                if ((this.IsIdInNameSearchStringField.Equals(value) != true)) {
                    this.IsIdInNameSearchStringField = value;
                    this.RaisePropertyChanged("IsIdInNameSearchString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ArtDatabanken.Data.WebService.SearchStringComparisonMethod NameSearchMethod {
            get {
                return this.NameSearchMethodField;
            }
            set {
                if ((this.NameSearchMethodField.Equals(value) != true)) {
                    this.NameSearchMethodField = value;
                    this.RaisePropertyChanged("NameSearchMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameSearchString {
            get {
                return this.NameSearchStringField;
            }
            set {
                if ((object.ReferenceEquals(this.NameSearchStringField, value) != true)) {
                    this.NameSearchStringField = value;
                    this.RaisePropertyChanged("NameSearchString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ArtDatabanken.Data.WebService.FactorSearchScope RestrictReturnToScope {
            get {
                return this.RestrictReturnToScopeField;
            }
            set {
                if ((this.RestrictReturnToScopeField.Equals(value) != true)) {
                    this.RestrictReturnToScopeField = value;
                    this.RaisePropertyChanged("RestrictReturnToScope");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<int> RestrictSearchToFactorIds {
            get {
                return this.RestrictSearchToFactorIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.RestrictSearchToFactorIdsField, value) != true)) {
                    this.RestrictSearchToFactorIdsField = value;
                    this.RaisePropertyChanged("RestrictSearchToFactorIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ArtDatabanken.Data.WebService.FactorSearchScope RestrictSearchToScope {
            get {
                return this.RestrictSearchToScopeField;
            }
            set {
                if ((this.RestrictSearchToScopeField.Equals(value) != true)) {
                    this.RestrictSearchToScopeField = value;
                    this.RaisePropertyChanged("RestrictSearchToScope");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebFactorTreeNode", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebFactorTreeNode : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebFactorTreeNode> ChildrenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ArtDatabanken.Data.WebService.WebFactor FactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebFactorTreeNode> Children {
            get {
                return this.ChildrenField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildrenField, value) != true)) {
                    this.ChildrenField = value;
                    this.RaisePropertyChanged("Children");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ArtDatabanken.Data.WebService.WebFactor Factor {
            get {
                return this.FactorField;
            }
            set {
                if ((object.ReferenceEquals(this.FactorField, value) != true)) {
                    this.FactorField = value;
                    this.RaisePropertyChanged("Factor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebFactorTreeSearchCriteria", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebFactorTreeSearchCriteria : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<int> RestrictSearchToFactorIdsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<int> RestrictSearchToFactorIds {
            get {
                return this.RestrictSearchToFactorIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.RestrictSearchToFactorIdsField, value) != true)) {
                    this.RestrictSearchToFactorIdsField = value;
                    this.RaisePropertyChanged("RestrictSearchToFactorIds");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebFactorUpdateMode", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebFactorUpdateMode : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefinitionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsUpdateAllowedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ArtDatabanken.Data.WebService.FactorUpdateModeType TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Definition {
            get {
                return this.DefinitionField;
            }
            set {
                if ((object.ReferenceEquals(this.DefinitionField, value) != true)) {
                    this.DefinitionField = value;
                    this.RaisePropertyChanged("Definition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsUpdateAllowed {
            get {
                return this.IsUpdateAllowedField;
            }
            set {
                if ((this.IsUpdateAllowedField.Equals(value) != true)) {
                    this.IsUpdateAllowedField = value;
                    this.RaisePropertyChanged("IsUpdateAllowed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ArtDatabanken.Data.WebService.FactorUpdateModeType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebTaxon", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebTaxon : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommonNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScientificNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SortOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ArtDatabanken.Data.WebService.TaxonInformationType TaxonInformationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TaxonTypeIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommonName {
            get {
                return this.CommonNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CommonNameField, value) != true)) {
                    this.CommonNameField = value;
                    this.RaisePropertyChanged("CommonName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScientificName {
            get {
                return this.ScientificNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ScientificNameField, value) != true)) {
                    this.ScientificNameField = value;
                    this.RaisePropertyChanged("ScientificName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SortOrder {
            get {
                return this.SortOrderField;
            }
            set {
                if ((this.SortOrderField.Equals(value) != true)) {
                    this.SortOrderField = value;
                    this.RaisePropertyChanged("SortOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ArtDatabanken.Data.WebService.TaxonInformationType TaxonInformationType {
            get {
                return this.TaxonInformationTypeField;
            }
            set {
                if ((this.TaxonInformationTypeField.Equals(value) != true)) {
                    this.TaxonInformationTypeField = value;
                    this.RaisePropertyChanged("TaxonInformationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaxonTypeId {
            get {
                return this.TaxonTypeIdField;
            }
            set {
                if ((this.TaxonTypeIdField.Equals(value) != true)) {
                    this.TaxonTypeIdField = value;
                    this.RaisePropertyChanged("TaxonTypeId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebIndividualCategory", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebIndividualCategory : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefinitionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SortOrderField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Definition {
            get {
                return this.DefinitionField;
            }
            set {
                if ((object.ReferenceEquals(this.DefinitionField, value) != true)) {
                    this.DefinitionField = value;
                    this.RaisePropertyChanged("Definition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SortOrder {
            get {
                return this.SortOrderField;
            }
            set {
                if ((this.SortOrderField.Equals(value) != true)) {
                    this.SortOrderField = value;
                    this.RaisePropertyChanged("SortOrder");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebLogRow", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebLogRow : ArtDatabanken.Data.WebService.WebData {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebPeriod", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebPeriod : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PeriodTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StopUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YearField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Information {
            get {
                return this.InformationField;
            }
            set {
                if ((object.ReferenceEquals(this.InformationField, value) != true)) {
                    this.InformationField = value;
                    this.RaisePropertyChanged("Information");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PeriodTypeId {
            get {
                return this.PeriodTypeIdField;
            }
            set {
                if ((this.PeriodTypeIdField.Equals(value) != true)) {
                    this.PeriodTypeIdField = value;
                    this.RaisePropertyChanged("PeriodTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StopUpdate {
            get {
                return this.StopUpdateField;
            }
            set {
                if ((this.StopUpdateField.Equals(value) != true)) {
                    this.StopUpdateField = value;
                    this.RaisePropertyChanged("StopUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebPeriodType", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebPeriodType : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebProvince", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebProvince : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsProvincePartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PartOfProvinceIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Identifier {
            get {
                return this.IdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.IdentifierField, value) != true)) {
                    this.IdentifierField = value;
                    this.RaisePropertyChanged("Identifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsProvincePart {
            get {
                return this.IsProvincePartField;
            }
            set {
                if ((this.IsProvincePartField.Equals(value) != true)) {
                    this.IsProvincePartField = value;
                    this.RaisePropertyChanged("IsProvincePart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PartOfProvinceId {
            get {
                return this.PartOfProvinceIdField;
            }
            set {
                if ((this.PartOfProvinceIdField.Equals(value) != true)) {
                    this.PartOfProvinceIdField = value;
                    this.RaisePropertyChanged("PartOfProvinceId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebSpeciesFactQuality", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebSpeciesFactQuality : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefinitionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Definition {
            get {
                return this.DefinitionField;
            }
            set {
                if ((object.ReferenceEquals(this.DefinitionField, value) != true)) {
                    this.DefinitionField = value;
                    this.RaisePropertyChanged("Definition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebSpeciesFact", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebSpeciesFact : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FactorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FieldValue1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FieldValue2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FieldValue3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldValue4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldValue5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HostIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IndividualCategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsFieldValue1SpecifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsFieldValue2SpecifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsFieldValue3SpecifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsFieldValue4SpecifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsFieldValue5SpecifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsHostSpecifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPeriodSpecifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PeriodIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QualityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReferenceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TaxonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdateUserFullNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FactorId {
            get {
                return this.FactorIdField;
            }
            set {
                if ((this.FactorIdField.Equals(value) != true)) {
                    this.FactorIdField = value;
                    this.RaisePropertyChanged("FactorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FieldValue1 {
            get {
                return this.FieldValue1Field;
            }
            set {
                if ((this.FieldValue1Field.Equals(value) != true)) {
                    this.FieldValue1Field = value;
                    this.RaisePropertyChanged("FieldValue1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FieldValue2 {
            get {
                return this.FieldValue2Field;
            }
            set {
                if ((this.FieldValue2Field.Equals(value) != true)) {
                    this.FieldValue2Field = value;
                    this.RaisePropertyChanged("FieldValue2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FieldValue3 {
            get {
                return this.FieldValue3Field;
            }
            set {
                if ((this.FieldValue3Field.Equals(value) != true)) {
                    this.FieldValue3Field = value;
                    this.RaisePropertyChanged("FieldValue3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldValue4 {
            get {
                return this.FieldValue4Field;
            }
            set {
                if ((object.ReferenceEquals(this.FieldValue4Field, value) != true)) {
                    this.FieldValue4Field = value;
                    this.RaisePropertyChanged("FieldValue4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldValue5 {
            get {
                return this.FieldValue5Field;
            }
            set {
                if ((object.ReferenceEquals(this.FieldValue5Field, value) != true)) {
                    this.FieldValue5Field = value;
                    this.RaisePropertyChanged("FieldValue5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HostId {
            get {
                return this.HostIdField;
            }
            set {
                if ((this.HostIdField.Equals(value) != true)) {
                    this.HostIdField = value;
                    this.RaisePropertyChanged("HostId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IndividualCategoryId {
            get {
                return this.IndividualCategoryIdField;
            }
            set {
                if ((this.IndividualCategoryIdField.Equals(value) != true)) {
                    this.IndividualCategoryIdField = value;
                    this.RaisePropertyChanged("IndividualCategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFieldValue1Specified {
            get {
                return this.IsFieldValue1SpecifiedField;
            }
            set {
                if ((this.IsFieldValue1SpecifiedField.Equals(value) != true)) {
                    this.IsFieldValue1SpecifiedField = value;
                    this.RaisePropertyChanged("IsFieldValue1Specified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFieldValue2Specified {
            get {
                return this.IsFieldValue2SpecifiedField;
            }
            set {
                if ((this.IsFieldValue2SpecifiedField.Equals(value) != true)) {
                    this.IsFieldValue2SpecifiedField = value;
                    this.RaisePropertyChanged("IsFieldValue2Specified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFieldValue3Specified {
            get {
                return this.IsFieldValue3SpecifiedField;
            }
            set {
                if ((this.IsFieldValue3SpecifiedField.Equals(value) != true)) {
                    this.IsFieldValue3SpecifiedField = value;
                    this.RaisePropertyChanged("IsFieldValue3Specified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFieldValue4Specified {
            get {
                return this.IsFieldValue4SpecifiedField;
            }
            set {
                if ((this.IsFieldValue4SpecifiedField.Equals(value) != true)) {
                    this.IsFieldValue4SpecifiedField = value;
                    this.RaisePropertyChanged("IsFieldValue4Specified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFieldValue5Specified {
            get {
                return this.IsFieldValue5SpecifiedField;
            }
            set {
                if ((this.IsFieldValue5SpecifiedField.Equals(value) != true)) {
                    this.IsFieldValue5SpecifiedField = value;
                    this.RaisePropertyChanged("IsFieldValue5Specified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsHostSpecified {
            get {
                return this.IsHostSpecifiedField;
            }
            set {
                if ((this.IsHostSpecifiedField.Equals(value) != true)) {
                    this.IsHostSpecifiedField = value;
                    this.RaisePropertyChanged("IsHostSpecified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPeriodSpecified {
            get {
                return this.IsPeriodSpecifiedField;
            }
            set {
                if ((this.IsPeriodSpecifiedField.Equals(value) != true)) {
                    this.IsPeriodSpecifiedField = value;
                    this.RaisePropertyChanged("IsPeriodSpecified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PeriodId {
            get {
                return this.PeriodIdField;
            }
            set {
                if ((this.PeriodIdField.Equals(value) != true)) {
                    this.PeriodIdField = value;
                    this.RaisePropertyChanged("PeriodId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QualityId {
            get {
                return this.QualityIdField;
            }
            set {
                if ((this.QualityIdField.Equals(value) != true)) {
                    this.QualityIdField = value;
                    this.RaisePropertyChanged("QualityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReferenceId {
            get {
                return this.ReferenceIdField;
            }
            set {
                if ((this.ReferenceIdField.Equals(value) != true)) {
                    this.ReferenceIdField = value;
                    this.RaisePropertyChanged("ReferenceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaxonId {
            get {
                return this.TaxonIdField;
            }
            set {
                if ((this.TaxonIdField.Equals(value) != true)) {
                    this.TaxonIdField = value;
                    this.RaisePropertyChanged("TaxonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdateDate {
            get {
                return this.UpdateDateField;
            }
            set {
                if ((this.UpdateDateField.Equals(value) != true)) {
                    this.UpdateDateField = value;
                    this.RaisePropertyChanged("UpdateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdateUserFullName {
            get {
                return this.UpdateUserFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdateUserFullNameField, value) != true)) {
                    this.UpdateUserFullNameField = value;
                    this.RaisePropertyChanged("UpdateUserFullName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebUserParameterSelection", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebUserParameterSelection : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<int> FactorIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<int> HostIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<int> IndividualCategoryIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<int> PeriodIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<int> ReferenceIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<int> TaxonIdsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<int> FactorIds {
            get {
                return this.FactorIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.FactorIdsField, value) != true)) {
                    this.FactorIdsField = value;
                    this.RaisePropertyChanged("FactorIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<int> HostIds {
            get {
                return this.HostIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.HostIdsField, value) != true)) {
                    this.HostIdsField = value;
                    this.RaisePropertyChanged("HostIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<int> IndividualCategoryIds {
            get {
                return this.IndividualCategoryIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.IndividualCategoryIdsField, value) != true)) {
                    this.IndividualCategoryIdsField = value;
                    this.RaisePropertyChanged("IndividualCategoryIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<int> PeriodIds {
            get {
                return this.PeriodIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.PeriodIdsField, value) != true)) {
                    this.PeriodIdsField = value;
                    this.RaisePropertyChanged("PeriodIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<int> ReferenceIds {
            get {
                return this.ReferenceIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceIdsField, value) != true)) {
                    this.ReferenceIdsField = value;
                    this.RaisePropertyChanged("ReferenceIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<int> TaxonIds {
            get {
                return this.TaxonIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxonIdsField, value) != true)) {
                    this.TaxonIdsField = value;
                    this.RaisePropertyChanged("TaxonIds");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebSpeciesObservation", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebSpeciesObservation : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebSpeciesObservationSearchCriteria", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebSpeciesObservationSearchCriteria : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccuracyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BirdNestActivityLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebCounty> CountiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<int> DatabaseIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EastCoordinateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IncludeNeverFoundObservationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IncludeNotRediscoveredObservationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IncludePositiveObservationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAccuracySpecifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsBirdNestActivityLevelSpecifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRectangleSpecifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationSearchStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NorthCoordinateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ObservationEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ObservationStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ObserverSearchStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebProvince> ProvincesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegistrationEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegistrationStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SouthCoordinateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<int> TaxonIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ArtDatabanken.Data.WebService.WebUseOfDate UseOfObservationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ArtDatabanken.Data.WebService.WebUseOfDate UseOfRegistrationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserRoleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WestCoordinateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Accuracy {
            get {
                return this.AccuracyField;
            }
            set {
                if ((this.AccuracyField.Equals(value) != true)) {
                    this.AccuracyField = value;
                    this.RaisePropertyChanged("Accuracy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BirdNestActivityLevel {
            get {
                return this.BirdNestActivityLevelField;
            }
            set {
                if ((this.BirdNestActivityLevelField.Equals(value) != true)) {
                    this.BirdNestActivityLevelField = value;
                    this.RaisePropertyChanged("BirdNestActivityLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebCounty> Counties {
            get {
                return this.CountiesField;
            }
            set {
                if ((object.ReferenceEquals(this.CountiesField, value) != true)) {
                    this.CountiesField = value;
                    this.RaisePropertyChanged("Counties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<int> DatabaseIds {
            get {
                return this.DatabaseIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.DatabaseIdsField, value) != true)) {
                    this.DatabaseIdsField = value;
                    this.RaisePropertyChanged("DatabaseIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EastCoordinate {
            get {
                return this.EastCoordinateField;
            }
            set {
                if ((this.EastCoordinateField.Equals(value) != true)) {
                    this.EastCoordinateField = value;
                    this.RaisePropertyChanged("EastCoordinate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IncludeNeverFoundObservations {
            get {
                return this.IncludeNeverFoundObservationsField;
            }
            set {
                if ((this.IncludeNeverFoundObservationsField.Equals(value) != true)) {
                    this.IncludeNeverFoundObservationsField = value;
                    this.RaisePropertyChanged("IncludeNeverFoundObservations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IncludeNotRediscoveredObservations {
            get {
                return this.IncludeNotRediscoveredObservationsField;
            }
            set {
                if ((this.IncludeNotRediscoveredObservationsField.Equals(value) != true)) {
                    this.IncludeNotRediscoveredObservationsField = value;
                    this.RaisePropertyChanged("IncludeNotRediscoveredObservations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IncludePositiveObservations {
            get {
                return this.IncludePositiveObservationsField;
            }
            set {
                if ((this.IncludePositiveObservationsField.Equals(value) != true)) {
                    this.IncludePositiveObservationsField = value;
                    this.RaisePropertyChanged("IncludePositiveObservations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAccuracySpecified {
            get {
                return this.IsAccuracySpecifiedField;
            }
            set {
                if ((this.IsAccuracySpecifiedField.Equals(value) != true)) {
                    this.IsAccuracySpecifiedField = value;
                    this.RaisePropertyChanged("IsAccuracySpecified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBirdNestActivityLevelSpecified {
            get {
                return this.IsBirdNestActivityLevelSpecifiedField;
            }
            set {
                if ((this.IsBirdNestActivityLevelSpecifiedField.Equals(value) != true)) {
                    this.IsBirdNestActivityLevelSpecifiedField = value;
                    this.RaisePropertyChanged("IsBirdNestActivityLevelSpecified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRectangleSpecified {
            get {
                return this.IsRectangleSpecifiedField;
            }
            set {
                if ((this.IsRectangleSpecifiedField.Equals(value) != true)) {
                    this.IsRectangleSpecifiedField = value;
                    this.RaisePropertyChanged("IsRectangleSpecified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationSearchString {
            get {
                return this.LocationSearchStringField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationSearchStringField, value) != true)) {
                    this.LocationSearchStringField = value;
                    this.RaisePropertyChanged("LocationSearchString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NorthCoordinate {
            get {
                return this.NorthCoordinateField;
            }
            set {
                if ((this.NorthCoordinateField.Equals(value) != true)) {
                    this.NorthCoordinateField = value;
                    this.RaisePropertyChanged("NorthCoordinate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ObservationEndDate {
            get {
                return this.ObservationEndDateField;
            }
            set {
                if ((this.ObservationEndDateField.Equals(value) != true)) {
                    this.ObservationEndDateField = value;
                    this.RaisePropertyChanged("ObservationEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ObservationStartDate {
            get {
                return this.ObservationStartDateField;
            }
            set {
                if ((this.ObservationStartDateField.Equals(value) != true)) {
                    this.ObservationStartDateField = value;
                    this.RaisePropertyChanged("ObservationStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ObserverSearchString {
            get {
                return this.ObserverSearchStringField;
            }
            set {
                if ((object.ReferenceEquals(this.ObserverSearchStringField, value) != true)) {
                    this.ObserverSearchStringField = value;
                    this.RaisePropertyChanged("ObserverSearchString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebProvince> Provinces {
            get {
                return this.ProvincesField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvincesField, value) != true)) {
                    this.ProvincesField = value;
                    this.RaisePropertyChanged("Provinces");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegistrationEndDate {
            get {
                return this.RegistrationEndDateField;
            }
            set {
                if ((this.RegistrationEndDateField.Equals(value) != true)) {
                    this.RegistrationEndDateField = value;
                    this.RaisePropertyChanged("RegistrationEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegistrationStartDate {
            get {
                return this.RegistrationStartDateField;
            }
            set {
                if ((this.RegistrationStartDateField.Equals(value) != true)) {
                    this.RegistrationStartDateField = value;
                    this.RaisePropertyChanged("RegistrationStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SouthCoordinate {
            get {
                return this.SouthCoordinateField;
            }
            set {
                if ((this.SouthCoordinateField.Equals(value) != true)) {
                    this.SouthCoordinateField = value;
                    this.RaisePropertyChanged("SouthCoordinate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<int> TaxonIds {
            get {
                return this.TaxonIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxonIdsField, value) != true)) {
                    this.TaxonIdsField = value;
                    this.RaisePropertyChanged("TaxonIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ArtDatabanken.Data.WebService.WebUseOfDate UseOfObservationDate {
            get {
                return this.UseOfObservationDateField;
            }
            set {
                if ((this.UseOfObservationDateField.Equals(value) != true)) {
                    this.UseOfObservationDateField = value;
                    this.RaisePropertyChanged("UseOfObservationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ArtDatabanken.Data.WebService.WebUseOfDate UseOfRegistrationDate {
            get {
                return this.UseOfRegistrationDateField;
            }
            set {
                if ((this.UseOfRegistrationDateField.Equals(value) != true)) {
                    this.UseOfRegistrationDateField = value;
                    this.RaisePropertyChanged("UseOfRegistrationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserRoleId {
            get {
                return this.UserRoleIdField;
            }
            set {
                if ((this.UserRoleIdField.Equals(value) != true)) {
                    this.UserRoleIdField = value;
                    this.RaisePropertyChanged("UserRoleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WestCoordinate {
            get {
                return this.WestCoordinateField;
            }
            set {
                if ((this.WestCoordinateField.Equals(value) != true)) {
                    this.WestCoordinateField = value;
                    this.RaisePropertyChanged("WestCoordinate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebSpeciesObservationInformation", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebSpeciesObservationInformation : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MaxSpeciesObservationCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SpeciesObservationCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<long> SpeciesObservationIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebSpeciesObservation> SpeciesObservationsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MaxSpeciesObservationCount {
            get {
                return this.MaxSpeciesObservationCountField;
            }
            set {
                if ((this.MaxSpeciesObservationCountField.Equals(value) != true)) {
                    this.MaxSpeciesObservationCountField = value;
                    this.RaisePropertyChanged("MaxSpeciesObservationCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SpeciesObservationCount {
            get {
                return this.SpeciesObservationCountField;
            }
            set {
                if ((this.SpeciesObservationCountField.Equals(value) != true)) {
                    this.SpeciesObservationCountField = value;
                    this.RaisePropertyChanged("SpeciesObservationCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<long> SpeciesObservationIds {
            get {
                return this.SpeciesObservationIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.SpeciesObservationIdsField, value) != true)) {
                    this.SpeciesObservationIdsField = value;
                    this.RaisePropertyChanged("SpeciesObservationIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebSpeciesObservation> SpeciesObservations {
            get {
                return this.SpeciesObservationsField;
            }
            set {
                if ((object.ReferenceEquals(this.SpeciesObservationsField, value) != true)) {
                    this.SpeciesObservationsField = value;
                    this.RaisePropertyChanged("SpeciesObservations");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebResourceStatus", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebResourceStatus : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ArtDatabanken.Data.WebService.WebResourceType ResourceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessType {
            get {
                return this.AccessTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTypeField, value) != true)) {
                    this.AccessTypeField = value;
                    this.RaisePropertyChanged("AccessType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Information {
            get {
                return this.InformationField;
            }
            set {
                if ((object.ReferenceEquals(this.InformationField, value) != true)) {
                    this.InformationField = value;
                    this.RaisePropertyChanged("Information");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ArtDatabanken.Data.WebService.WebResourceType ResourceType {
            get {
                return this.ResourceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceTypeField, value) != true)) {
                    this.ResourceTypeField = value;
                    this.RaisePropertyChanged("ResourceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebResourceType", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebResourceType : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Identifier {
            get {
                return this.IdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.IdentifierField, value) != true)) {
                    this.IdentifierField = value;
                    this.RaisePropertyChanged("Identifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebDataQuery", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebDataQuery : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ArtDatabanken.Data.WebService.WebDataCondition DataConditionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ArtDatabanken.Data.WebService.WebDataConversion DataConversionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ArtDatabanken.Data.WebService.WebDataLimitation DataLimitationField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ArtDatabanken.Data.WebService.WebDataCondition DataCondition {
            get {
                return this.DataConditionField;
            }
            set {
                if ((object.ReferenceEquals(this.DataConditionField, value) != true)) {
                    this.DataConditionField = value;
                    this.RaisePropertyChanged("DataCondition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ArtDatabanken.Data.WebService.WebDataConversion DataConversion {
            get {
                return this.DataConversionField;
            }
            set {
                if ((object.ReferenceEquals(this.DataConversionField, value) != true)) {
                    this.DataConversionField = value;
                    this.RaisePropertyChanged("DataConversion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ArtDatabanken.Data.WebService.WebDataLimitation DataLimitation {
            get {
                return this.DataLimitationField;
            }
            set {
                if ((object.ReferenceEquals(this.DataLimitationField, value) != true)) {
                    this.DataLimitationField = value;
                    this.RaisePropertyChanged("DataLimitation");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebDataCondition", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebDataCondition : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ArtDatabanken.Data.WebService.WebDataLogicCondition DataLogicConditionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ArtDatabanken.Data.WebService.WebSpeciesFactCondition SpeciesFactConditionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ArtDatabanken.Data.WebService.WebDataLogicCondition DataLogicCondition {
            get {
                return this.DataLogicConditionField;
            }
            set {
                if ((object.ReferenceEquals(this.DataLogicConditionField, value) != true)) {
                    this.DataLogicConditionField = value;
                    this.RaisePropertyChanged("DataLogicCondition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ArtDatabanken.Data.WebService.WebSpeciesFactCondition SpeciesFactCondition {
            get {
                return this.SpeciesFactConditionField;
            }
            set {
                if ((object.ReferenceEquals(this.SpeciesFactConditionField, value) != true)) {
                    this.SpeciesFactConditionField = value;
                    this.RaisePropertyChanged("SpeciesFactCondition");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebDataLogicCondition", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebDataLogicCondition : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebDataQuery> DataQueriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ArtDatabanken.Data.WebService.DataLogicConditionOperatorId OperatorField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebDataQuery> DataQueries {
            get {
                return this.DataQueriesField;
            }
            set {
                if ((object.ReferenceEquals(this.DataQueriesField, value) != true)) {
                    this.DataQueriesField = value;
                    this.RaisePropertyChanged("DataQueries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ArtDatabanken.Data.WebService.DataLogicConditionOperatorId Operator {
            get {
                return this.OperatorField;
            }
            set {
                if ((this.OperatorField.Equals(value) != true)) {
                    this.OperatorField = value;
                    this.RaisePropertyChanged("Operator");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebSpeciesFactCondition", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebSpeciesFactCondition : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebFactor> FactorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<int> HostIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebIndividualCategory> IndividualCategoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebPeriod> PeriodsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebSpeciesFactFieldCondition> SpeciesFactFieldConditionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<int> TaxonIdsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebFactor> Factors {
            get {
                return this.FactorsField;
            }
            set {
                if ((object.ReferenceEquals(this.FactorsField, value) != true)) {
                    this.FactorsField = value;
                    this.RaisePropertyChanged("Factors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<int> HostIds {
            get {
                return this.HostIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.HostIdsField, value) != true)) {
                    this.HostIdsField = value;
                    this.RaisePropertyChanged("HostIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebIndividualCategory> IndividualCategories {
            get {
                return this.IndividualCategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.IndividualCategoriesField, value) != true)) {
                    this.IndividualCategoriesField = value;
                    this.RaisePropertyChanged("IndividualCategories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebPeriod> Periods {
            get {
                return this.PeriodsField;
            }
            set {
                if ((object.ReferenceEquals(this.PeriodsField, value) != true)) {
                    this.PeriodsField = value;
                    this.RaisePropertyChanged("Periods");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebSpeciesFactFieldCondition> SpeciesFactFieldConditions {
            get {
                return this.SpeciesFactFieldConditionsField;
            }
            set {
                if ((object.ReferenceEquals(this.SpeciesFactFieldConditionsField, value) != true)) {
                    this.SpeciesFactFieldConditionsField = value;
                    this.RaisePropertyChanged("SpeciesFactFieldConditions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<int> TaxonIds {
            get {
                return this.TaxonIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxonIdsField, value) != true)) {
                    this.TaxonIdsField = value;
                    this.RaisePropertyChanged("TaxonIds");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebSpeciesFactFieldCondition", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebSpeciesFactFieldCondition : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ArtDatabanken.Data.WebService.WebFactorField FactorFieldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEnumAsStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ArtDatabanken.Data.WebService.DataConditionOperatorId OperatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ArtDatabanken.Data.WebService.WebFactorField FactorField {
            get {
                return this.FactorFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.FactorFieldField, value) != true)) {
                    this.FactorFieldField = value;
                    this.RaisePropertyChanged("FactorField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEnumAsString {
            get {
                return this.IsEnumAsStringField;
            }
            set {
                if ((this.IsEnumAsStringField.Equals(value) != true)) {
                    this.IsEnumAsStringField = value;
                    this.RaisePropertyChanged("IsEnumAsString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ArtDatabanken.Data.WebService.DataConditionOperatorId Operator {
            get {
                return this.OperatorField;
            }
            set {
                if ((this.OperatorField.Equals(value) != true)) {
                    this.OperatorField = value;
                    this.RaisePropertyChanged("Operator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebDataConversion", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebDataConversion : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ArtDatabanken.Data.WebService.DataTypeId ConvertToDataTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ArtDatabanken.Data.WebService.WebDataQuery DataQueryField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ArtDatabanken.Data.WebService.DataTypeId ConvertToDataType {
            get {
                return this.ConvertToDataTypeField;
            }
            set {
                if ((this.ConvertToDataTypeField.Equals(value) != true)) {
                    this.ConvertToDataTypeField = value;
                    this.RaisePropertyChanged("ConvertToDataType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ArtDatabanken.Data.WebService.WebDataQuery DataQuery {
            get {
                return this.DataQueryField;
            }
            set {
                if ((object.ReferenceEquals(this.DataQueryField, value) != true)) {
                    this.DataQueryField = value;
                    this.RaisePropertyChanged("DataQuery");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebDataLimitation", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebDataLimitation : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebDataIdentifier> DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebDataQuery> DataQueriesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebDataIdentifier> Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebDataQuery> DataQueries {
            get {
                return this.DataQueriesField;
            }
            set {
                if ((object.ReferenceEquals(this.DataQueriesField, value) != true)) {
                    this.DataQueriesField = value;
                    this.RaisePropertyChanged("DataQueries");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebDataIdentifier", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebDataIdentifier : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ArtDatabanken.Data.WebService.DataTypeId DataTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdentifierField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ArtDatabanken.Data.WebService.DataTypeId DataType {
            get {
                return this.DataTypeField;
            }
            set {
                if ((this.DataTypeField.Equals(value) != true)) {
                    this.DataTypeField = value;
                    this.RaisePropertyChanged("DataType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Identifier {
            get {
                return this.IdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.IdentifierField, value) != true)) {
                    this.IdentifierField = value;
                    this.RaisePropertyChanged("Identifier");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebTaxonSearchCriteria", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebTaxonSearchCriteria : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ArtDatabanken.Data.WebService.TaxonSearchScope RestrictReturnToScopeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RestrictReturnToSwedishSpeciesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<int> RestrictReturnToTaxonTypeIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RestrictSearchToSwedishSpeciesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<int> RestrictSearchToTaxonIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<int> RestrictSearchToTaxonTypeIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ArtDatabanken.Data.WebService.TaxonInformationType TaxonInformationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxonNameSearchStringField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ArtDatabanken.Data.WebService.TaxonSearchScope RestrictReturnToScope {
            get {
                return this.RestrictReturnToScopeField;
            }
            set {
                if ((this.RestrictReturnToScopeField.Equals(value) != true)) {
                    this.RestrictReturnToScopeField = value;
                    this.RaisePropertyChanged("RestrictReturnToScope");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RestrictReturnToSwedishSpecies {
            get {
                return this.RestrictReturnToSwedishSpeciesField;
            }
            set {
                if ((this.RestrictReturnToSwedishSpeciesField.Equals(value) != true)) {
                    this.RestrictReturnToSwedishSpeciesField = value;
                    this.RaisePropertyChanged("RestrictReturnToSwedishSpecies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<int> RestrictReturnToTaxonTypeIds {
            get {
                return this.RestrictReturnToTaxonTypeIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.RestrictReturnToTaxonTypeIdsField, value) != true)) {
                    this.RestrictReturnToTaxonTypeIdsField = value;
                    this.RaisePropertyChanged("RestrictReturnToTaxonTypeIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RestrictSearchToSwedishSpecies {
            get {
                return this.RestrictSearchToSwedishSpeciesField;
            }
            set {
                if ((this.RestrictSearchToSwedishSpeciesField.Equals(value) != true)) {
                    this.RestrictSearchToSwedishSpeciesField = value;
                    this.RaisePropertyChanged("RestrictSearchToSwedishSpecies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<int> RestrictSearchToTaxonIds {
            get {
                return this.RestrictSearchToTaxonIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.RestrictSearchToTaxonIdsField, value) != true)) {
                    this.RestrictSearchToTaxonIdsField = value;
                    this.RaisePropertyChanged("RestrictSearchToTaxonIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<int> RestrictSearchToTaxonTypeIds {
            get {
                return this.RestrictSearchToTaxonTypeIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.RestrictSearchToTaxonTypeIdsField, value) != true)) {
                    this.RestrictSearchToTaxonTypeIdsField = value;
                    this.RaisePropertyChanged("RestrictSearchToTaxonTypeIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ArtDatabanken.Data.WebService.TaxonInformationType TaxonInformationType {
            get {
                return this.TaxonInformationTypeField;
            }
            set {
                if ((this.TaxonInformationTypeField.Equals(value) != true)) {
                    this.TaxonInformationTypeField = value;
                    this.RaisePropertyChanged("TaxonInformationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxonNameSearchString {
            get {
                return this.TaxonNameSearchStringField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxonNameSearchStringField, value) != true)) {
                    this.TaxonNameSearchStringField = value;
                    this.RaisePropertyChanged("TaxonNameSearchString");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebTaxonCountyOccurrence", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebTaxonCountyOccurrence : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ArtDataIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountyOccurrenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsArtDataIdSpecifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSourceIdSpecifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginalCountyOccurrenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SourceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TaxonIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ArtDataId {
            get {
                return this.ArtDataIdField;
            }
            set {
                if ((this.ArtDataIdField.Equals(value) != true)) {
                    this.ArtDataIdField = value;
                    this.RaisePropertyChanged("ArtDataId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountyId {
            get {
                return this.CountyIdField;
            }
            set {
                if ((this.CountyIdField.Equals(value) != true)) {
                    this.CountyIdField = value;
                    this.RaisePropertyChanged("CountyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountyOccurrence {
            get {
                return this.CountyOccurrenceField;
            }
            set {
                if ((object.ReferenceEquals(this.CountyOccurrenceField, value) != true)) {
                    this.CountyOccurrenceField = value;
                    this.RaisePropertyChanged("CountyOccurrence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsArtDataIdSpecified {
            get {
                return this.IsArtDataIdSpecifiedField;
            }
            set {
                if ((this.IsArtDataIdSpecifiedField.Equals(value) != true)) {
                    this.IsArtDataIdSpecifiedField = value;
                    this.RaisePropertyChanged("IsArtDataIdSpecified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSourceIdSpecified {
            get {
                return this.IsSourceIdSpecifiedField;
            }
            set {
                if ((this.IsSourceIdSpecifiedField.Equals(value) != true)) {
                    this.IsSourceIdSpecifiedField = value;
                    this.RaisePropertyChanged("IsSourceIdSpecified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OriginalCountyOccurrence {
            get {
                return this.OriginalCountyOccurrenceField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalCountyOccurrenceField, value) != true)) {
                    this.OriginalCountyOccurrenceField = value;
                    this.RaisePropertyChanged("OriginalCountyOccurrence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SourceId {
            get {
                return this.SourceIdField;
            }
            set {
                if ((this.SourceIdField.Equals(value) != true)) {
                    this.SourceIdField = value;
                    this.RaisePropertyChanged("SourceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaxonId {
            get {
                return this.TaxonIdField;
            }
            set {
                if ((this.TaxonIdField.Equals(value) != true)) {
                    this.TaxonIdField = value;
                    this.RaisePropertyChanged("TaxonId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebTaxonName", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebTaxonName : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRecommendedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ArtDatabanken.Data.WebService.WebTaxon TaxonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TaxonNameTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TaxonNameUseTypeIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRecommended {
            get {
                return this.IsRecommendedField;
            }
            set {
                if ((this.IsRecommendedField.Equals(value) != true)) {
                    this.IsRecommendedField = value;
                    this.RaisePropertyChanged("IsRecommended");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ArtDatabanken.Data.WebService.WebTaxon Taxon {
            get {
                return this.TaxonField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxonField, value) != true)) {
                    this.TaxonField = value;
                    this.RaisePropertyChanged("Taxon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaxonNameTypeId {
            get {
                return this.TaxonNameTypeIdField;
            }
            set {
                if ((this.TaxonNameTypeIdField.Equals(value) != true)) {
                    this.TaxonNameTypeIdField = value;
                    this.RaisePropertyChanged("TaxonNameTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaxonNameUseTypeId {
            get {
                return this.TaxonNameUseTypeIdField;
            }
            set {
                if ((this.TaxonNameUseTypeIdField.Equals(value) != true)) {
                    this.TaxonNameUseTypeIdField = value;
                    this.RaisePropertyChanged("TaxonNameUseTypeId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebTaxonNameSearchCriteria", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebTaxonNameSearchCriteria : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ArtDatabanken.Data.WebService.SearchStringComparisonMethod NameSearchMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameSearchStringField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ArtDatabanken.Data.WebService.SearchStringComparisonMethod NameSearchMethod {
            get {
                return this.NameSearchMethodField;
            }
            set {
                if ((this.NameSearchMethodField.Equals(value) != true)) {
                    this.NameSearchMethodField = value;
                    this.RaisePropertyChanged("NameSearchMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameSearchString {
            get {
                return this.NameSearchStringField;
            }
            set {
                if ((object.ReferenceEquals(this.NameSearchStringField, value) != true)) {
                    this.NameSearchStringField = value;
                    this.RaisePropertyChanged("NameSearchString");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebTaxonNameType", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebTaxonNameType : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SortOrderField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SortOrder {
            get {
                return this.SortOrderField;
            }
            set {
                if ((this.SortOrderField.Equals(value) != true)) {
                    this.SortOrderField = value;
                    this.RaisePropertyChanged("SortOrder");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebTaxonNameUseType", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebTaxonNameUseType : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebTaxonTreeSearchCriteria", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebTaxonTreeSearchCriteria : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<int> RestrictSearchToTaxonIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<int> RestrictSearchToTaxonTypeIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ArtDatabanken.Data.WebService.TaxonInformationType TaxonInformationTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<int> RestrictSearchToTaxonIds {
            get {
                return this.RestrictSearchToTaxonIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.RestrictSearchToTaxonIdsField, value) != true)) {
                    this.RestrictSearchToTaxonIdsField = value;
                    this.RaisePropertyChanged("RestrictSearchToTaxonIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<int> RestrictSearchToTaxonTypeIds {
            get {
                return this.RestrictSearchToTaxonTypeIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.RestrictSearchToTaxonTypeIdsField, value) != true)) {
                    this.RestrictSearchToTaxonTypeIdsField = value;
                    this.RaisePropertyChanged("RestrictSearchToTaxonTypeIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ArtDatabanken.Data.WebService.TaxonInformationType TaxonInformationType {
            get {
                return this.TaxonInformationTypeField;
            }
            set {
                if ((this.TaxonInformationTypeField.Equals(value) != true)) {
                    this.TaxonInformationTypeField = value;
                    this.RaisePropertyChanged("TaxonInformationType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebTaxonTreeNode", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebTaxonTreeNode : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebTaxonTreeNode> ChildrenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ArtDatabanken.Data.WebService.WebTaxon TaxonField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebTaxonTreeNode> Children {
            get {
                return this.ChildrenField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildrenField, value) != true)) {
                    this.ChildrenField = value;
                    this.RaisePropertyChanged("Children");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ArtDatabanken.Data.WebService.WebTaxon Taxon {
            get {
                return this.TaxonField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxonField, value) != true)) {
                    this.TaxonField = value;
                    this.RaisePropertyChanged("Taxon");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebTaxonType", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebTaxonType : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SortOrderField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SortOrder {
            get {
                return this.SortOrderField;
            }
            set {
                if ((this.SortOrderField.Equals(value) != true)) {
                    this.SortOrderField = value;
                    this.RaisePropertyChanged("SortOrder");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebUser", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebUser : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebUserRole> RolesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebUserRole> Roles {
            get {
                return this.RolesField;
            }
            set {
                if ((object.ReferenceEquals(this.RolesField, value) != true)) {
                    this.RolesField = value;
                    this.RaisePropertyChanged("Roles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebUserRole", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebUserRole : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebReference", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebReference : ArtDatabanken.Data.WebService.WebData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YearField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebDataField", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebDataField : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsValueSpecifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ArtDatabanken.Data.WebService.WebDataType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsValueSpecified {
            get {
                return this.IsValueSpecifiedField;
            }
            set {
                if ((this.IsValueSpecifiedField.Equals(value) != true)) {
                    this.IsValueSpecifiedField = value;
                    this.RaisePropertyChanged("IsValueSpecified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ArtDatabanken.Data.WebService.WebDataType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebDataType", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    public enum WebDataType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Boolean = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DateTime = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Float = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Int32 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Int64 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        String = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchStringComparisonMethod", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    public enum SearchStringComparisonMethod : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Contains = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Exact = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExactOrAll = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Iterative = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Like = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FactorSearchScope", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    public enum FactorSearchScope : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoScope = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllChildFactors = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllParentFactors = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NearestChildFactors = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NearestParentFactors = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LeafFactors = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FactorUpdateModeType", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    public enum FactorUpdateModeType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Archive = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutomaticUpdate = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Header = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManualUpdate = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaxonInformationType", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    public enum TaxonInformationType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Basic = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrintObs = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebUseOfDate", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    public enum WebUseOfDate : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSet = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Precise = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IgnoreYear = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataLogicConditionOperatorId", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    public enum DataLogicConditionOperatorId : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        And = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Not = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Or = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataConditionOperatorId", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    public enum DataConditionOperatorId : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Equal = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Greater = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GreaterOrEqual = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsNull = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Less = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LessOrEqual = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Like = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoOperator = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotEqual = 8,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataTypeId", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    public enum DataTypeId : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Factor = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FactorFieldEnumValue = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Host = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IndividualCategory = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoDataType = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Period = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reference = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpeciesFact = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpeciesObservation = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Taxon = 9,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaxonSearchScope", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    public enum TaxonSearchScope : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoScope = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllChildTaxa = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllParentTaxa = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LogType", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    public enum LogType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Information = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Security = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpeciesObservationUpdate = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpeciesObservationArtportalenUpdate = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Trace = 6,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebSpeciesObservationChange", Namespace="http://schemas.datacontract.org/2004/07/ArtDatabanken.WebService.ArtDatabankenSer" +
        "vice.Data")]
    [System.SerializableAttribute()]
    public partial class WebSpeciesObservationChange : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DeletedSpeciesObservationCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> DeletedSpeciesObservationGuidsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MaxSpeciesObservationCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long NewSpeciesObservationCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<long> NewSpeciesObservationIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebSpeciesObservation> NewSpeciesObservationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UpdatedSpeciesObservationCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<long> UpdatedSpeciesObservationIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebSpeciesObservation> UpdatedSpeciesObservationsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DeletedSpeciesObservationCount {
            get {
                return this.DeletedSpeciesObservationCountField;
            }
            set {
                if ((this.DeletedSpeciesObservationCountField.Equals(value) != true)) {
                    this.DeletedSpeciesObservationCountField = value;
                    this.RaisePropertyChanged("DeletedSpeciesObservationCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> DeletedSpeciesObservationGuids {
            get {
                return this.DeletedSpeciesObservationGuidsField;
            }
            set {
                if ((object.ReferenceEquals(this.DeletedSpeciesObservationGuidsField, value) != true)) {
                    this.DeletedSpeciesObservationGuidsField = value;
                    this.RaisePropertyChanged("DeletedSpeciesObservationGuids");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MaxSpeciesObservationCount {
            get {
                return this.MaxSpeciesObservationCountField;
            }
            set {
                if ((this.MaxSpeciesObservationCountField.Equals(value) != true)) {
                    this.MaxSpeciesObservationCountField = value;
                    this.RaisePropertyChanged("MaxSpeciesObservationCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long NewSpeciesObservationCount {
            get {
                return this.NewSpeciesObservationCountField;
            }
            set {
                if ((this.NewSpeciesObservationCountField.Equals(value) != true)) {
                    this.NewSpeciesObservationCountField = value;
                    this.RaisePropertyChanged("NewSpeciesObservationCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<long> NewSpeciesObservationIds {
            get {
                return this.NewSpeciesObservationIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.NewSpeciesObservationIdsField, value) != true)) {
                    this.NewSpeciesObservationIdsField = value;
                    this.RaisePropertyChanged("NewSpeciesObservationIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebSpeciesObservation> NewSpeciesObservations {
            get {
                return this.NewSpeciesObservationsField;
            }
            set {
                if ((object.ReferenceEquals(this.NewSpeciesObservationsField, value) != true)) {
                    this.NewSpeciesObservationsField = value;
                    this.RaisePropertyChanged("NewSpeciesObservations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UpdatedSpeciesObservationCount {
            get {
                return this.UpdatedSpeciesObservationCountField;
            }
            set {
                if ((this.UpdatedSpeciesObservationCountField.Equals(value) != true)) {
                    this.UpdatedSpeciesObservationCountField = value;
                    this.RaisePropertyChanged("UpdatedSpeciesObservationCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<long> UpdatedSpeciesObservationIds {
            get {
                return this.UpdatedSpeciesObservationIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatedSpeciesObservationIdsField, value) != true)) {
                    this.UpdatedSpeciesObservationIdsField = value;
                    this.RaisePropertyChanged("UpdatedSpeciesObservationIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebSpeciesObservation> UpdatedSpeciesObservations {
            get {
                return this.UpdatedSpeciesObservationsField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatedSpeciesObservationsField, value) != true)) {
                    this.UpdatedSpeciesObservationsField = value;
                    this.RaisePropertyChanged("UpdatedSpeciesObservations");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:WebServices.ArtDatabanken.slu.se", ConfigurationName="WebService.IArtDatabankenService", SessionMode=System.ServiceModel.SessionMode.NotAllowed)]
    public interface IArtDatabankenService {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/ClearCache", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/ClearCacheResponse")]
        void ClearCache(string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/CommitTransaction", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/CommitTransactionRespo" +
            "nse")]
        void CommitTransaction(string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/CreateReference", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/CreateReferenceRespons" +
            "e")]
        void CreateReference(string clientToken, ArtDatabanken.Data.WebService.WebReference reference);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/DeleteTrace", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/DeleteTraceResponse")]
        void DeleteTrace(string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetBirdNestActivities", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetBirdNestActivitiesR" +
            "esponse")]
        System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebBirdNestActivity> GetBirdNestActivities(string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetCitiesBySearchStrin" +
            "g", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetCitiesBySearchStrin" +
            "gResponse")]
        System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebCity> GetCitiesBySearchString(string clientToken, string searchString);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetCounties", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetCountiesResponse")]
        System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebCounty> GetCounties(string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetDatabases", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetDatabasesResponse")]
        System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebDatabase> GetDatabases(string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetDatabaseUpdate", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetDatabaseUpdateRespo" +
            "nse")]
        ArtDatabanken.Data.WebService.WebDatabaseUpdate GetDatabaseUpdate(string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetEndangeredLists", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetEndangeredListsResp" +
            "onse")]
        System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebEndangeredList> GetEndangeredLists(string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetFactorDataTypes", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetFactorDataTypesResp" +
            "onse")]
        System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebFactorDataType> GetFactorDataTypes(string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetFactorFieldEnums", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetFactorFieldEnumsRes" +
            "ponse")]
        System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebFactorFieldEnum> GetFactorFieldEnums(string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetFactorFieldTypes", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetFactorFieldTypesRes" +
            "ponse")]
        System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebFactorFieldType> GetFactorFieldTypes(string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetFactorOrigins", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetFactorOriginsRespon" +
            "se")]
        System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebFactorOrigin> GetFactorOrigins(string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetFactors", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetFactorsResponse")]
        System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebFactor> GetFactors(string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetFactorsBySearchCrit" +
            "eria", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetFactorsBySearchCrit" +
            "eriaResponse")]
        System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebFactor> GetFactorsBySearchCriteria(string clientToken, ArtDatabanken.Data.WebService.WebFactorSearchCriteria factorSearchCriteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetFactorTrees", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetFactorTreesResponse" +
            "")]
        System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebFactorTreeNode> GetFactorTrees(string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetFactorTreesBySearch" +
            "Criteria", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetFactorTreesBySearch" +
            "CriteriaResponse")]
        System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebFactorTreeNode> GetFactorTreesBySearchCriteria(string clientToken, ArtDatabanken.Data.WebService.WebFactorTreeSearchCriteria searchCriteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetFactorUpdateModes", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetFactorUpdateModesRe" +
            "sponse")]
        System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebFactorUpdateMode> GetFactorUpdateModes(string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetHostTaxa", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetHostTaxaResponse")]
        System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebTaxon> GetHostTaxa(string clientToken, int factorId, ArtDatabanken.Data.WebService.TaxonInformationType taxonInformationType);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetHostTaxaByTaxonId", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetHostTaxaByTaxonIdRe" +
            "sponse")]
        System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebTaxon> GetHostTaxaByTaxonId(string clientToken, int taxonId, ArtDatabanken.Data.WebService.TaxonInformationType taxonInformationType);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetIndividualCategorie" +
            "s", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetIndividualCategorie" +
            "sResponse")]
        System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebIndividualCategory> GetIndividualCategories(string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetLog", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetLogResponse")]
        System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebLogRow> GetLog(string clientToken, ArtDatabanken.Data.WebService.LogType type, string userName, int rowCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetPeriods", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetPeriodsResponse")]
        System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebPeriod> GetPeriods(string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetPeriodTypes", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetPeriodTypesResponse" +
            "")]
        System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebPeriodType> GetPeriodTypes(string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetProvinces", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetProvincesResponse")]
        System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebProvince> GetProvinces(string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetReferences", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetReferencesResponse")]
        System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebReference> GetReferences(string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetReferencesBySearchS" +
            "tring", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetReferencesBySearchS" +
            "tringResponse")]
        System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebReference> GetReferencesBySearchString(string clientToken, string searchString);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetSpeciesFactQualitie" +
            "s", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetSpeciesFactQualitie" +
            "sResponse")]
        System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebSpeciesFactQuality> GetSpeciesFactQualities(string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetSpeciesFactsById", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetSpeciesFactsByIdRes" +
            "ponse")]
        System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebSpeciesFact> GetSpeciesFactsById(string clientToken, System.Collections.Generic.List<int> speciesFactIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetSpeciesFactsByIdent" +
            "ifier", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetSpeciesFactsByIdent" +
            "ifierResponse")]
        System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebSpeciesFact> GetSpeciesFactsByIdentifier(string clientToken, System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebSpeciesFact> speciesFacts);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetSpeciesFactsByUserP" +
            "arameterSelection", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetSpeciesFactsByUserP" +
            "arameterSelectionResponse")]
        System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebSpeciesFact> GetSpeciesFactsByUserParameterSelection(string clientToken, ArtDatabanken.Data.WebService.WebUserParameterSelection userParameterSelection);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetSpeciesObservationC" +
            "hange", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetSpeciesObservationC" +
            "hangeResponse")]
        ArtDatabanken.Data.WebService.WebSpeciesObservationChange GetSpeciesObservationChange(string clientToken, System.DateTime changedFrom, System.DateTime changedTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetSpeciesObservationC" +
            "ountBySearchCriteria", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetSpeciesObservationC" +
            "ountBySearchCriteriaResponse")]
        int GetSpeciesObservationCountBySearchCriteria(string clientToken, ArtDatabanken.Data.WebService.WebSpeciesObservationSearchCriteria searchCriteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetSpeciesObservations" +
            "ById", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetSpeciesObservations" +
            "ByIdResponse")]
        ArtDatabanken.Data.WebService.WebSpeciesObservationInformation GetSpeciesObservationsById(string clientToken, System.Collections.Generic.List<long> speciesObservationIds, int userRoleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetSpeciesObservations" +
            "BySearchCriteria", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetSpeciesObservations" +
            "BySearchCriteriaResponse")]
        ArtDatabanken.Data.WebService.WebSpeciesObservationInformation GetSpeciesObservationsBySearchCriteria(string clientToken, ArtDatabanken.Data.WebService.WebSpeciesObservationSearchCriteria searchCriteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetStatus", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetStatusResponse")]
        System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebResourceStatus> GetStatus(string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetTaxaByHostTaxonId", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetTaxaByHostTaxonIdRe" +
            "sponse")]
        System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebTaxon> GetTaxaByHostTaxonId(string clientToken, int hostTaxonId, ArtDatabanken.Data.WebService.TaxonInformationType taxonInformationType);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetTaxaById", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetTaxaByIdResponse")]
        System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebTaxon> GetTaxaById(string clientToken, System.Collections.Generic.List<int> taxonIds, ArtDatabanken.Data.WebService.TaxonInformationType taxonInformationType);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetTaxaByOrganismOrRed" +
            "list", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetTaxaByOrganismOrRed" +
            "listResponse")]
        System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebTaxon> GetTaxaByOrganismOrRedlist(string clientToken, bool hasOrganismGroupId, int organismGroupId, bool hasEndangeredListId, int endangeredListId, bool hasRedlistCategoryId, int redlistCategoryId, ArtDatabanken.Data.WebService.TaxonInformationType taxonInformationType);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetTaxaByQuery", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetTaxaByQueryResponse" +
            "")]
        System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebTaxon> GetTaxaByQuery(string clientToken, ArtDatabanken.Data.WebService.WebDataQuery dataQuery, ArtDatabanken.Data.WebService.TaxonInformationType taxonInformationType);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetTaxaBySearchCriteri" +
            "a", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetTaxaBySearchCriteri" +
            "aResponse")]
        System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebTaxon> GetTaxaBySearchCriteria(string clientToken, ArtDatabanken.Data.WebService.WebTaxonSearchCriteria taxonSearchCriteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetTaxaBySpeciesObserv" +
            "ations", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetTaxaBySpeciesObserv" +
            "ationsResponse")]
        System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebTaxon> GetTaxaBySpeciesObservations(string clientToken, ArtDatabanken.Data.WebService.WebSpeciesObservationSearchCriteria searchCriteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetTaxaCountBySpeciesO" +
            "bservations", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetTaxaCountBySpeciesO" +
            "bservationsResponse")]
        int GetTaxaCountBySpeciesObservations(string clientToken, ArtDatabanken.Data.WebService.WebSpeciesObservationSearchCriteria searchCriteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetTaxonById", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetTaxonByIdResponse")]
        ArtDatabanken.Data.WebService.WebTaxon GetTaxonById(string clientToken, int taxonId, ArtDatabanken.Data.WebService.TaxonInformationType taxonInformationType);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetTaxonCountyOccurenc" +
            "e", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetTaxonCountyOccurenc" +
            "eResponse")]
        System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebTaxonCountyOccurrence> GetTaxonCountyOccurence(string clientToken, int taxonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetTaxonNames", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetTaxonNamesResponse")]
        System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebTaxonName> GetTaxonNames(string clientToken, int taxonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetTaxonNamesBySearchC" +
            "riteria", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetTaxonNamesBySearchC" +
            "riteriaResponse")]
        System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebTaxonName> GetTaxonNamesBySearchCriteria(string clientToken, ArtDatabanken.Data.WebService.WebTaxonNameSearchCriteria searchCriteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetTaxonNameTypes", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetTaxonNameTypesRespo" +
            "nse")]
        System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebTaxonNameType> GetTaxonNameTypes(string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetTaxonNameUseTypes", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetTaxonNameUseTypesRe" +
            "sponse")]
        System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebTaxonNameUseType> GetTaxonNameUseTypes(string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetTaxonTreesBySearchC" +
            "riteria", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetTaxonTreesBySearchC" +
            "riteriaResponse")]
        System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebTaxonTreeNode> GetTaxonTreesBySearchCriteria(string clientToken, ArtDatabanken.Data.WebService.WebTaxonTreeSearchCriteria searchCriteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetTaxonTypes", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetTaxonTypesResponse")]
        System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebTaxonType> GetTaxonTypes(string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetUser", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/GetUserResponse")]
        ArtDatabanken.Data.WebService.WebUser GetUser(string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/Login", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/LoginResponse")]
        string Login(string userName, string password, string applicationIdentifier, bool isActivationRequired);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/Logout", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/LogoutResponse")]
        void Logout(string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/Ping", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/PingResponse")]
        bool Ping();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/RollbackTransaction", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/RollbackTransactionRes" +
            "ponse")]
        void RollbackTransaction(string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/StartTrace", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/StartTraceResponse")]
        void StartTrace(string clientToken, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/StartTransaction", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/StartTransactionRespon" +
            "se")]
        void StartTransaction(string clientToken, int timeout);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/StopTrace", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/StopTraceResponse")]
        void StopTrace(string clientToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/UpdateReference", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/UpdateReferenceRespons" +
            "e")]
        void UpdateReference(string clientToken, ArtDatabanken.Data.WebService.WebReference reference);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/UpdateSpeciesFacts", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/UpdateSpeciesFactsResp" +
            "onse")]
        void UpdateSpeciesFacts(string clientToken, System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebSpeciesFact> createSpeciesFacts, System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebSpeciesFact> deleteSpeciesFacts, [System.ServiceModel.MessageParameterAttribute(Name="updateSpeciesFacts")] System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebSpeciesFact> updateSpeciesFacts1);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/UpdateDyntaxaSpeciesFa" +
            "cts", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IArtDatabankenService/UpdateDyntaxaSpeciesFa" +
            "ctsResponse")]
        void UpdateDyntaxaSpeciesFacts(string clientToken, System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebSpeciesFact> createSpeciesFacts, System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebSpeciesFact> deleteSpeciesFacts, System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebSpeciesFact> updateSpeciesFacts, string fullName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IArtDatabankenServiceChannel : ArtDatabanken.Data.WebService.IArtDatabankenService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ArtDatabankenServiceClient : System.ServiceModel.ClientBase<ArtDatabanken.Data.WebService.IArtDatabankenService>, ArtDatabanken.Data.WebService.IArtDatabankenService {
        
        public ArtDatabankenServiceClient() {
        }
        
        public ArtDatabankenServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ArtDatabankenServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ArtDatabankenServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ArtDatabankenServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void ClearCache(string clientToken) {
            base.Channel.ClearCache(clientToken);
        }
        
        public void CommitTransaction(string clientToken) {
            base.Channel.CommitTransaction(clientToken);
        }
        
        public void CreateReference(string clientToken, ArtDatabanken.Data.WebService.WebReference reference) {
            base.Channel.CreateReference(clientToken, reference);
        }
        
        public void DeleteTrace(string clientToken) {
            base.Channel.DeleteTrace(clientToken);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebBirdNestActivity> GetBirdNestActivities(string clientToken) {
            return base.Channel.GetBirdNestActivities(clientToken);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebCity> GetCitiesBySearchString(string clientToken, string searchString) {
            return base.Channel.GetCitiesBySearchString(clientToken, searchString);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebCounty> GetCounties(string clientToken) {
            return base.Channel.GetCounties(clientToken);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebDatabase> GetDatabases(string clientToken) {
            return base.Channel.GetDatabases(clientToken);
        }
        
        public ArtDatabanken.Data.WebService.WebDatabaseUpdate GetDatabaseUpdate(string clientToken) {
            return base.Channel.GetDatabaseUpdate(clientToken);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebEndangeredList> GetEndangeredLists(string clientToken) {
            return base.Channel.GetEndangeredLists(clientToken);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebFactorDataType> GetFactorDataTypes(string clientToken) {
            return base.Channel.GetFactorDataTypes(clientToken);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebFactorFieldEnum> GetFactorFieldEnums(string clientToken) {
            return base.Channel.GetFactorFieldEnums(clientToken);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebFactorFieldType> GetFactorFieldTypes(string clientToken) {
            return base.Channel.GetFactorFieldTypes(clientToken);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebFactorOrigin> GetFactorOrigins(string clientToken) {
            return base.Channel.GetFactorOrigins(clientToken);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebFactor> GetFactors(string clientToken) {
            return base.Channel.GetFactors(clientToken);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebFactor> GetFactorsBySearchCriteria(string clientToken, ArtDatabanken.Data.WebService.WebFactorSearchCriteria factorSearchCriteria) {
            return base.Channel.GetFactorsBySearchCriteria(clientToken, factorSearchCriteria);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebFactorTreeNode> GetFactorTrees(string clientToken) {
            return base.Channel.GetFactorTrees(clientToken);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebFactorTreeNode> GetFactorTreesBySearchCriteria(string clientToken, ArtDatabanken.Data.WebService.WebFactorTreeSearchCriteria searchCriteria) {
            return base.Channel.GetFactorTreesBySearchCriteria(clientToken, searchCriteria);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebFactorUpdateMode> GetFactorUpdateModes(string clientToken) {
            return base.Channel.GetFactorUpdateModes(clientToken);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebTaxon> GetHostTaxa(string clientToken, int factorId, ArtDatabanken.Data.WebService.TaxonInformationType taxonInformationType) {
            return base.Channel.GetHostTaxa(clientToken, factorId, taxonInformationType);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebTaxon> GetHostTaxaByTaxonId(string clientToken, int taxonId, ArtDatabanken.Data.WebService.TaxonInformationType taxonInformationType) {
            return base.Channel.GetHostTaxaByTaxonId(clientToken, taxonId, taxonInformationType);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebIndividualCategory> GetIndividualCategories(string clientToken) {
            return base.Channel.GetIndividualCategories(clientToken);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebLogRow> GetLog(string clientToken, ArtDatabanken.Data.WebService.LogType type, string userName, int rowCount) {
            return base.Channel.GetLog(clientToken, type, userName, rowCount);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebPeriod> GetPeriods(string clientToken) {
            return base.Channel.GetPeriods(clientToken);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebPeriodType> GetPeriodTypes(string clientToken) {
            return base.Channel.GetPeriodTypes(clientToken);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebProvince> GetProvinces(string clientToken) {
            return base.Channel.GetProvinces(clientToken);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebReference> GetReferences(string clientToken) {
            return base.Channel.GetReferences(clientToken);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebReference> GetReferencesBySearchString(string clientToken, string searchString) {
            return base.Channel.GetReferencesBySearchString(clientToken, searchString);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebSpeciesFactQuality> GetSpeciesFactQualities(string clientToken) {
            return base.Channel.GetSpeciesFactQualities(clientToken);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebSpeciesFact> GetSpeciesFactsById(string clientToken, System.Collections.Generic.List<int> speciesFactIds) {
            return base.Channel.GetSpeciesFactsById(clientToken, speciesFactIds);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebSpeciesFact> GetSpeciesFactsByIdentifier(string clientToken, System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebSpeciesFact> speciesFacts) {
            return base.Channel.GetSpeciesFactsByIdentifier(clientToken, speciesFacts);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebSpeciesFact> GetSpeciesFactsByUserParameterSelection(string clientToken, ArtDatabanken.Data.WebService.WebUserParameterSelection userParameterSelection) {
            return base.Channel.GetSpeciesFactsByUserParameterSelection(clientToken, userParameterSelection);
        }
        
        public ArtDatabanken.Data.WebService.WebSpeciesObservationChange GetSpeciesObservationChange(string clientToken, System.DateTime changedFrom, System.DateTime changedTo) {
            return base.Channel.GetSpeciesObservationChange(clientToken, changedFrom, changedTo);
        }
        
        public int GetSpeciesObservationCountBySearchCriteria(string clientToken, ArtDatabanken.Data.WebService.WebSpeciesObservationSearchCriteria searchCriteria) {
            return base.Channel.GetSpeciesObservationCountBySearchCriteria(clientToken, searchCriteria);
        }
        
        public ArtDatabanken.Data.WebService.WebSpeciesObservationInformation GetSpeciesObservationsById(string clientToken, System.Collections.Generic.List<long> speciesObservationIds, int userRoleId) {
            return base.Channel.GetSpeciesObservationsById(clientToken, speciesObservationIds, userRoleId);
        }
        
        public ArtDatabanken.Data.WebService.WebSpeciesObservationInformation GetSpeciesObservationsBySearchCriteria(string clientToken, ArtDatabanken.Data.WebService.WebSpeciesObservationSearchCriteria searchCriteria) {
            return base.Channel.GetSpeciesObservationsBySearchCriteria(clientToken, searchCriteria);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebResourceStatus> GetStatus(string clientToken) {
            return base.Channel.GetStatus(clientToken);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebTaxon> GetTaxaByHostTaxonId(string clientToken, int hostTaxonId, ArtDatabanken.Data.WebService.TaxonInformationType taxonInformationType) {
            return base.Channel.GetTaxaByHostTaxonId(clientToken, hostTaxonId, taxonInformationType);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebTaxon> GetTaxaById(string clientToken, System.Collections.Generic.List<int> taxonIds, ArtDatabanken.Data.WebService.TaxonInformationType taxonInformationType) {
            return base.Channel.GetTaxaById(clientToken, taxonIds, taxonInformationType);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebTaxon> GetTaxaByOrganismOrRedlist(string clientToken, bool hasOrganismGroupId, int organismGroupId, bool hasEndangeredListId, int endangeredListId, bool hasRedlistCategoryId, int redlistCategoryId, ArtDatabanken.Data.WebService.TaxonInformationType taxonInformationType) {
            return base.Channel.GetTaxaByOrganismOrRedlist(clientToken, hasOrganismGroupId, organismGroupId, hasEndangeredListId, endangeredListId, hasRedlistCategoryId, redlistCategoryId, taxonInformationType);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebTaxon> GetTaxaByQuery(string clientToken, ArtDatabanken.Data.WebService.WebDataQuery dataQuery, ArtDatabanken.Data.WebService.TaxonInformationType taxonInformationType) {
            return base.Channel.GetTaxaByQuery(clientToken, dataQuery, taxonInformationType);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebTaxon> GetTaxaBySearchCriteria(string clientToken, ArtDatabanken.Data.WebService.WebTaxonSearchCriteria taxonSearchCriteria) {
            return base.Channel.GetTaxaBySearchCriteria(clientToken, taxonSearchCriteria);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebTaxon> GetTaxaBySpeciesObservations(string clientToken, ArtDatabanken.Data.WebService.WebSpeciesObservationSearchCriteria searchCriteria) {
            return base.Channel.GetTaxaBySpeciesObservations(clientToken, searchCriteria);
        }
        
        public int GetTaxaCountBySpeciesObservations(string clientToken, ArtDatabanken.Data.WebService.WebSpeciesObservationSearchCriteria searchCriteria) {
            return base.Channel.GetTaxaCountBySpeciesObservations(clientToken, searchCriteria);
        }
        
        public ArtDatabanken.Data.WebService.WebTaxon GetTaxonById(string clientToken, int taxonId, ArtDatabanken.Data.WebService.TaxonInformationType taxonInformationType) {
            return base.Channel.GetTaxonById(clientToken, taxonId, taxonInformationType);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebTaxonCountyOccurrence> GetTaxonCountyOccurence(string clientToken, int taxonId) {
            return base.Channel.GetTaxonCountyOccurence(clientToken, taxonId);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebTaxonName> GetTaxonNames(string clientToken, int taxonId) {
            return base.Channel.GetTaxonNames(clientToken, taxonId);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebTaxonName> GetTaxonNamesBySearchCriteria(string clientToken, ArtDatabanken.Data.WebService.WebTaxonNameSearchCriteria searchCriteria) {
            return base.Channel.GetTaxonNamesBySearchCriteria(clientToken, searchCriteria);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebTaxonNameType> GetTaxonNameTypes(string clientToken) {
            return base.Channel.GetTaxonNameTypes(clientToken);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebTaxonNameUseType> GetTaxonNameUseTypes(string clientToken) {
            return base.Channel.GetTaxonNameUseTypes(clientToken);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebTaxonTreeNode> GetTaxonTreesBySearchCriteria(string clientToken, ArtDatabanken.Data.WebService.WebTaxonTreeSearchCriteria searchCriteria) {
            return base.Channel.GetTaxonTreesBySearchCriteria(clientToken, searchCriteria);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebTaxonType> GetTaxonTypes(string clientToken) {
            return base.Channel.GetTaxonTypes(clientToken);
        }
        
        public ArtDatabanken.Data.WebService.WebUser GetUser(string clientToken) {
            return base.Channel.GetUser(clientToken);
        }
        
        public string Login(string userName, string password, string applicationIdentifier, bool isActivationRequired) {
            return base.Channel.Login(userName, password, applicationIdentifier, isActivationRequired);
        }
        
        public void Logout(string clientToken) {
            base.Channel.Logout(clientToken);
        }
        
        public bool Ping() {
            return base.Channel.Ping();
        }
        
        public void RollbackTransaction(string clientToken) {
            base.Channel.RollbackTransaction(clientToken);
        }
        
        public void StartTrace(string clientToken, string userName) {
            base.Channel.StartTrace(clientToken, userName);
        }
        
        public void StartTransaction(string clientToken, int timeout) {
            base.Channel.StartTransaction(clientToken, timeout);
        }
        
        public void StopTrace(string clientToken) {
            base.Channel.StopTrace(clientToken);
        }
        
        public void UpdateReference(string clientToken, ArtDatabanken.Data.WebService.WebReference reference) {
            base.Channel.UpdateReference(clientToken, reference);
        }
        
        public void UpdateSpeciesFacts(string clientToken, System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebSpeciesFact> createSpeciesFacts, System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebSpeciesFact> deleteSpeciesFacts, System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebSpeciesFact> updateSpeciesFacts1) {
            base.Channel.UpdateSpeciesFacts(clientToken, createSpeciesFacts, deleteSpeciesFacts, updateSpeciesFacts1);
        }
        
        public void UpdateDyntaxaSpeciesFacts(string clientToken, System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebSpeciesFact> createSpeciesFacts, System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebSpeciesFact> deleteSpeciesFacts, System.Collections.Generic.List<ArtDatabanken.Data.WebService.WebSpeciesFact> updateSpeciesFacts, string fullName) {
            base.Channel.UpdateDyntaxaSpeciesFacts(clientToken, createSpeciesFacts, deleteSpeciesFacts, updateSpeciesFacts, fullName);
        }
    }
}
