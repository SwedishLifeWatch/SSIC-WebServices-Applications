//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#pragma warning disable 1570
#pragma warning disable 1571
#pragma warning disable 1572
#pragma warning disable 1573
#pragma warning disable 1587
#pragma warning disable 1591

namespace ArtDatabanken.WebService.Proxy.SpeciesObservationHarvestService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:WebServices.ArtDatabanken.slu.se", ConfigurationName="SpeciesObservationHarvestService.ISpeciesObservationHarvestService", SessionMode=System.ServiceModel.SessionMode.NotAllowed)]
    public interface ISpeciesObservationHarvestService {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/ISpeciesObservationHarvestService/ClearCache" +
            "", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/ISpeciesObservationHarvestService/ClearCache" +
            "Response")]
        void ClearCache(ArtDatabanken.WebService.Data.WebClientInformation clientInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/ISpeciesObservationHarvestService/DeleteTrac" +
            "e", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/ISpeciesObservationHarvestService/DeleteTrac" +
            "eResponse")]
        void DeleteTrace(ArtDatabanken.WebService.Data.WebClientInformation clientInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/ISpeciesObservationHarvestService/GetLog", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/ISpeciesObservationHarvestService/GetLogResp" +
            "onse")]
        System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebLogRow> GetLog(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, ArtDatabanken.WebService.Data.LogType type, string userName, int rowCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/ISpeciesObservationHarvestService/GetStatus", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/ISpeciesObservationHarvestService/GetStatusR" +
            "esponse")]
        System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebResourceStatus> GetStatus(ArtDatabanken.WebService.Data.WebClientInformation clientInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/ISpeciesObservationHarvestService/Login", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/ISpeciesObservationHarvestService/LoginRespo" +
            "nse")]
        ArtDatabanken.WebService.Data.WebLoginResponse Login(string userName, string password, string applicationIdentifier, bool isActivationRequired);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/ISpeciesObservationHarvestService/Logout", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/ISpeciesObservationHarvestService/LogoutResp" +
            "onse")]
        void Logout(ArtDatabanken.WebService.Data.WebClientInformation clientInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/ISpeciesObservationHarvestService/Ping", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/ISpeciesObservationHarvestService/PingRespon" +
            "se")]
        bool Ping();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/ISpeciesObservationHarvestService/StartTrace" +
            "", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/ISpeciesObservationHarvestService/StartTrace" +
            "Response")]
        void StartTrace(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/ISpeciesObservationHarvestService/StopTrace", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/ISpeciesObservationHarvestService/StopTraceR" +
            "esponse")]
        void StopTrace(ArtDatabanken.WebService.Data.WebClientInformation clientInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/ISpeciesObservationHarvestService/UpdateSpec" +
            "iesObservations", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/ISpeciesObservationHarvestService/UpdateSpec" +
            "iesObservationsResponse")]
        void UpdateSpeciesObservations(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, System.DateTime changedFrom, System.DateTime changedTo, System.Collections.Generic.List<int> dataProviderIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/ISpeciesObservationHarvestService/StartSpeci" +
            "esObservationUpdate", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/ISpeciesObservationHarvestService/StartSpeci" +
            "esObservationUpdateResponse")]
        void StartSpeciesObservationUpdate(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, System.DateTime changedFrom, System.DateTime changedTo, System.Collections.Generic.List<int> dataProviderIds, bool isChangedDatesSpecified);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/ISpeciesObservationHarvestService/StopSpecie" +
            "sObservationUpdate", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/ISpeciesObservationHarvestService/StopSpecie" +
            "sObservationUpdateResponse")]
        void StopSpeciesObservationUpdate(ArtDatabanken.WebService.Data.WebClientInformation clientInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/ISpeciesObservationHarvestService/PauseSpeci" +
            "esObservationUpdate", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/ISpeciesObservationHarvestService/PauseSpeci" +
            "esObservationUpdateResponse")]
        void PauseSpeciesObservationUpdate(ArtDatabanken.WebService.Data.WebClientInformation clientInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/ISpeciesObservationHarvestService/ContinueSp" +
            "eciesObservationUpdate", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/ISpeciesObservationHarvestService/ContinueSp" +
            "eciesObservationUpdateResponse")]
        void ContinueSpeciesObservationUpdate(ArtDatabanken.WebService.Data.WebClientInformation clientInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/ISpeciesObservationHarvestService/GetSpecies" +
            "ObservationUpdateStatus", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/ISpeciesObservationHarvestService/GetSpecies" +
            "ObservationUpdateStatusResponse")]
        ArtDatabanken.WebService.Data.WebSpeciesObservationHarvestStatus GetSpeciesObservationUpdateStatus(ArtDatabanken.WebService.Data.WebClientInformation clientInformation);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISpeciesObservationHarvestServiceChannel : ArtDatabanken.WebService.Proxy.SpeciesObservationHarvestService.ISpeciesObservationHarvestService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SpeciesObservationHarvestServiceClient : System.ServiceModel.ClientBase<ArtDatabanken.WebService.Proxy.SpeciesObservationHarvestService.ISpeciesObservationHarvestService>, ArtDatabanken.WebService.Proxy.SpeciesObservationHarvestService.ISpeciesObservationHarvestService {
        
        public SpeciesObservationHarvestServiceClient() {
        }
        
        public SpeciesObservationHarvestServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SpeciesObservationHarvestServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SpeciesObservationHarvestServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SpeciesObservationHarvestServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void ClearCache(ArtDatabanken.WebService.Data.WebClientInformation clientInformation) {
            base.Channel.ClearCache(clientInformation);
        }
        
        public void DeleteTrace(ArtDatabanken.WebService.Data.WebClientInformation clientInformation) {
            base.Channel.DeleteTrace(clientInformation);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebLogRow> GetLog(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, ArtDatabanken.WebService.Data.LogType type, string userName, int rowCount) {
            return base.Channel.GetLog(clientInformation, type, userName, rowCount);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebResourceStatus> GetStatus(ArtDatabanken.WebService.Data.WebClientInformation clientInformation) {
            return base.Channel.GetStatus(clientInformation);
        }
        
        public ArtDatabanken.WebService.Data.WebLoginResponse Login(string userName, string password, string applicationIdentifier, bool isActivationRequired) {
            return base.Channel.Login(userName, password, applicationIdentifier, isActivationRequired);
        }
        
        public void Logout(ArtDatabanken.WebService.Data.WebClientInformation clientInformation) {
            base.Channel.Logout(clientInformation);
        }
        
        public bool Ping() {
            return base.Channel.Ping();
        }
        
        public void StartTrace(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, string userName) {
            base.Channel.StartTrace(clientInformation, userName);
        }
        
        public void StopTrace(ArtDatabanken.WebService.Data.WebClientInformation clientInformation) {
            base.Channel.StopTrace(clientInformation);
        }
        
        public void UpdateSpeciesObservations(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, System.DateTime changedFrom, System.DateTime changedTo, System.Collections.Generic.List<int> dataProviderIds) {
            base.Channel.UpdateSpeciesObservations(clientInformation, changedFrom, changedTo, dataProviderIds);
        }
        
        public void StartSpeciesObservationUpdate(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, System.DateTime changedFrom, System.DateTime changedTo, System.Collections.Generic.List<int> dataProviderIds, bool isChangedDatesSpecified) {
            base.Channel.StartSpeciesObservationUpdate(clientInformation, changedFrom, changedTo, dataProviderIds, isChangedDatesSpecified);
        }
        
        public void StopSpeciesObservationUpdate(ArtDatabanken.WebService.Data.WebClientInformation clientInformation) {
            base.Channel.StopSpeciesObservationUpdate(clientInformation);
        }
        
        public void PauseSpeciesObservationUpdate(ArtDatabanken.WebService.Data.WebClientInformation clientInformation) {
            base.Channel.PauseSpeciesObservationUpdate(clientInformation);
        }
        
        public void ContinueSpeciesObservationUpdate(ArtDatabanken.WebService.Data.WebClientInformation clientInformation) {
            base.Channel.ContinueSpeciesObservationUpdate(clientInformation);
        }
        
        public ArtDatabanken.WebService.Data.WebSpeciesObservationHarvestStatus GetSpeciesObservationUpdateStatus(ArtDatabanken.WebService.Data.WebClientInformation clientInformation) {
            return base.Channel.GetSpeciesObservationUpdateStatus(clientInformation);
        }
    }
}
