//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1570
#pragma warning disable 1571
#pragma warning disable 1572
#pragma warning disable 1573
#pragma warning disable 1587
#pragma warning disable 1591

namespace ArtDatabanken.WebService.Proxy.PictureService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:WebServices.ArtDatabanken.slu.se", ConfigurationName="PictureService.IPictureService", SessionMode=System.ServiceModel.SessionMode.NotAllowed)]
    public interface IPictureService {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IPictureService/ClearCache", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IPictureService/ClearCacheResponse")]
        void ClearCache(ArtDatabanken.WebService.Data.WebClientInformation clientInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IPictureService/CommitTransaction", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IPictureService/CommitTransactionResponse")]
        void CommitTransaction(ArtDatabanken.WebService.Data.WebClientInformation clientInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IPictureService/DeleteTrace", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IPictureService/DeleteTraceResponse")]
        void DeleteTrace(ArtDatabanken.WebService.Data.WebClientInformation clientInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IPictureService/GetLog", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IPictureService/GetLogResponse")]
        System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebLogRow> GetLog(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, ArtDatabanken.WebService.Data.LogType type, string userName, int rowCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IPictureService/CreatePictureFilename", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IPictureService/CreatePictureFilenameRespons" +
            "e")]
        ArtDatabanken.WebService.Data.WebPictureResponse CreatePictureFilename(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, string picture, string filename, System.DateTime lastModified, bool hasLastModified, long versionId, string updatedBy, System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebPictureMetaData> metaData);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IPictureService/UpdatePictures", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IPictureService/UpdatePicturesResponse")]
        int UpdatePictures(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebPicture> pictures, string updatedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IPictureService/DeletePictureFilename", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IPictureService/DeletePictureFilenameRespons" +
            "e")]
        int DeletePictureFilename(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, long pictureId, bool hasPictureId, string filename, long pictureStringId, bool hasPictureStringId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IPictureService/CreatePictureMetaData", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IPictureService/CreatePictureMetaDataRespons" +
            "e")]
        void CreatePictureMetaData(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, long pictureId, System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebPictureMetaData> metaData);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IPictureService/UpdatePictureMetaData", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IPictureService/UpdatePictureMetaDataRespons" +
            "e")]
        int UpdatePictureMetaData(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, long pictureId, string updatedBy, System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebPictureMetaData> metaData);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IPictureService/DeletePictureMetaData", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IPictureService/DeletePictureMetaDataRespons" +
            "e")]
        int DeletePictureMetaData(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, long pictureId, System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebPictureMetaData> metaData);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IPictureService/CreatePictureRelations", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IPictureService/CreatePictureRelationsRespon" +
            "se")]
        void CreatePictureRelations(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebPictureRelation> pictureRelations);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IPictureService/UpdatePictureRelations", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IPictureService/UpdatePictureRelationsRespon" +
            "se")]
        int UpdatePictureRelations(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebPictureRelation> pictureRelations);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IPictureService/DeletePictureRelations", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IPictureService/DeletePictureRelationsRespon" +
            "se")]
        int DeletePictureRelations(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, System.Collections.Generic.List<long> pictureRelationIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IPictureService/GetPictureById", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IPictureService/GetPictureByIdResponse")]
        ArtDatabanken.WebService.Data.WebPicture GetPictureById(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, long pictureId, int height, bool hasHeight, int width, bool hasWidth, long requestedSize, bool isRequestedSizeSpecified, string requestedFormat);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IPictureService/GetPictureByPictureFilename", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IPictureService/GetPictureByPictureFilenameR" +
            "esponse")]
        ArtDatabanken.WebService.Data.WebPicture GetPictureByPictureFilename(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, string pictureFilename);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IPictureService/GetPictureByPictureStringId", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IPictureService/GetPictureByPictureStringIdR" +
            "esponse")]
        ArtDatabanken.WebService.Data.WebPicture GetPictureByPictureStringId(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, long pictureStringId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IPictureService/GetPictureInformationById", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IPictureService/GetPictureInformationByIdRes" +
            "ponse")]
        ArtDatabanken.WebService.Data.WebPictureInformation GetPictureInformationById(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, long pictureId, int height, bool hasHeight, int width, bool hasWidth, System.Collections.Generic.List<int> metaDataIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IPictureService/GetPicturesInformationBySear" +
            "chCriteria", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IPictureService/GetPicturesInformationBySear" +
            "chCriteriaResponse")]
        System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebPictureInformation> GetPicturesInformationBySearchCriteria(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, ArtDatabanken.WebService.Data.WebPicturesSearchCriteria searchCriteria, int height, bool hasHeight, int width, bool hasWidth, long requestedSize, bool isRequestedSizeSpecified, string requestedFormat, System.Collections.Generic.List<int> metaDataIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IPictureService/GetPictureMetaDataById", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IPictureService/GetPictureMetaDataByIdRespon" +
            "se")]
        System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebPictureMetaData> GetPictureMetaDataById(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, long pictureId, System.Collections.Generic.List<int> metaDataIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IPictureService/GetAllRecommendedPicturesMet" +
            "aData", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IPictureService/GetAllRecommendedPicturesMet" +
            "aDataResponse")]
        System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebPictureMetaDataInformation> GetAllRecommendedPicturesMetaData(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, int pictureRelationTypeId, System.Collections.Generic.List<int> metaDataIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IPictureService/GetPictureMetaDataDescriptio" +
            "ns", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IPictureService/GetPictureMetaDataDescriptio" +
            "nsResponse")]
        System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebPictureMetaDataDescription> GetPictureMetaDataDescriptions(ArtDatabanken.WebService.Data.WebClientInformation clientInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IPictureService/GetPictureMetaDataDescriptio" +
            "nsByIds", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IPictureService/GetPictureMetaDataDescriptio" +
            "nsByIdsResponse")]
        System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebPictureMetaDataDescription> GetPictureMetaDataDescriptionsByIds(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, System.Collections.Generic.List<int> pictureMetaDataDescriptionsIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IPictureService/GetPictureRelationDataTypes", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IPictureService/GetPictureRelationDataTypesR" +
            "esponse")]
        System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebPictureRelationDataType> GetPictureRelationDataTypes(ArtDatabanken.WebService.Data.WebClientInformation clientInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IPictureService/GetPictureRelationsByObjectG" +
            "uid", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IPictureService/GetPictureRelationsByObjectG" +
            "uidResponse")]
        System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebPictureRelation> GetPictureRelationsByObjectGuid(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, string objectGuid, int pictureRelationTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IPictureService/GetPictureRelationsByPicture" +
            "Id", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IPictureService/GetPictureRelationsByPicture" +
            "IdResponse")]
        System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebPictureRelation> GetPictureRelationsByPictureId(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, long pictureId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IPictureService/GetPictureRelationTypes", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IPictureService/GetPictureRelationTypesRespo" +
            "nse")]
        System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebPictureRelationType> GetPictureRelationTypes(ArtDatabanken.WebService.Data.WebClientInformation clientInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IPictureService/GetPicturesByIds", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IPictureService/GetPicturesByIdsResponse")]
        System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebPicture> GetPicturesByIds(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, System.Collections.Generic.List<long> pictureIds, int height, bool hasHeight, int width, bool hasWidth, long requestedSize, bool isRequestedSizeSpecified, string requestedFormat);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IPictureService/GetPictureBySearchCriteria", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IPictureService/GetPictureBySearchCriteriaRe" +
            "sponse")]
        System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebPicture> GetPictureBySearchCriteria(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, ArtDatabanken.WebService.Data.WebPicturesSearchCriteria searchCriteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IPictureService/GetRecommendedPictureIdsByOb" +
            "jectGuid", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IPictureService/GetRecommendedPictureIdsByOb" +
            "jectGuidResponse")]
        System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebPictureGuid> GetRecommendedPictureIdsByObjectGuid(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, System.Collections.Generic.List<string> objectGuids, int pictureRelationTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IPictureService/GetAllRecommendedPictureIds", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IPictureService/GetAllRecommendedPictureIdsR" +
            "esponse")]
        System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebPictureGuid> GetAllRecommendedPictureIds(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, int pictureRelationTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IPictureService/GetStatus", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IPictureService/GetStatusResponse")]
        System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebResourceStatus> GetStatus(ArtDatabanken.WebService.Data.WebClientInformation clientInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IPictureService/Login", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IPictureService/LoginResponse")]
        ArtDatabanken.WebService.Data.WebLoginResponse Login(string userName, string password, string applicationIdentifier, bool isActivationRequired);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IPictureService/Logout", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IPictureService/LogoutResponse")]
        void Logout(ArtDatabanken.WebService.Data.WebClientInformation clientInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IPictureService/Ping", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IPictureService/PingResponse")]
        bool Ping();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IPictureService/RollbackTransaction", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IPictureService/RollbackTransactionResponse")]
        void RollbackTransaction(ArtDatabanken.WebService.Data.WebClientInformation clientInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IPictureService/StartTrace", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IPictureService/StartTraceResponse")]
        void StartTrace(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IPictureService/StartTransaction", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IPictureService/StartTransactionResponse")]
        void StartTransaction(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, int timeout);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:WebServices.ArtDatabanken.slu.se/IPictureService/StopTrace", ReplyAction="urn:WebServices.ArtDatabanken.slu.se/IPictureService/StopTraceResponse")]
        void StopTrace(ArtDatabanken.WebService.Data.WebClientInformation clientInformation);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPictureServiceChannel : ArtDatabanken.WebService.Proxy.PictureService.IPictureService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PictureServiceClient : System.ServiceModel.ClientBase<ArtDatabanken.WebService.Proxy.PictureService.IPictureService>, ArtDatabanken.WebService.Proxy.PictureService.IPictureService {
        
        public PictureServiceClient() {
        }
        
        public PictureServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PictureServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PictureServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PictureServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void ClearCache(ArtDatabanken.WebService.Data.WebClientInformation clientInformation) {
            base.Channel.ClearCache(clientInformation);
        }
        
        public void CommitTransaction(ArtDatabanken.WebService.Data.WebClientInformation clientInformation) {
            base.Channel.CommitTransaction(clientInformation);
        }
        
        public void DeleteTrace(ArtDatabanken.WebService.Data.WebClientInformation clientInformation) {
            base.Channel.DeleteTrace(clientInformation);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebLogRow> GetLog(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, ArtDatabanken.WebService.Data.LogType type, string userName, int rowCount) {
            return base.Channel.GetLog(clientInformation, type, userName, rowCount);
        }
        
        public ArtDatabanken.WebService.Data.WebPictureResponse CreatePictureFilename(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, string picture, string filename, System.DateTime lastModified, bool hasLastModified, long versionId, string updatedBy, System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebPictureMetaData> metaData) {
            return base.Channel.CreatePictureFilename(clientInformation, picture, filename, lastModified, hasLastModified, versionId, updatedBy, metaData);
        }
        
        public int UpdatePictures(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebPicture> pictures, string updatedBy) {
            return base.Channel.UpdatePictures(clientInformation, pictures, updatedBy);
        }
        
        public int DeletePictureFilename(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, long pictureId, bool hasPictureId, string filename, long pictureStringId, bool hasPictureStringId) {
            return base.Channel.DeletePictureFilename(clientInformation, pictureId, hasPictureId, filename, pictureStringId, hasPictureStringId);
        }
        
        public void CreatePictureMetaData(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, long pictureId, System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebPictureMetaData> metaData) {
            base.Channel.CreatePictureMetaData(clientInformation, pictureId, metaData);
        }
        
        public int UpdatePictureMetaData(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, long pictureId, string updatedBy, System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebPictureMetaData> metaData) {
            return base.Channel.UpdatePictureMetaData(clientInformation, pictureId, updatedBy, metaData);
        }
        
        public int DeletePictureMetaData(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, long pictureId, System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebPictureMetaData> metaData) {
            return base.Channel.DeletePictureMetaData(clientInformation, pictureId, metaData);
        }
        
        public void CreatePictureRelations(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebPictureRelation> pictureRelations) {
            base.Channel.CreatePictureRelations(clientInformation, pictureRelations);
        }
        
        public int UpdatePictureRelations(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebPictureRelation> pictureRelations) {
            return base.Channel.UpdatePictureRelations(clientInformation, pictureRelations);
        }
        
        public int DeletePictureRelations(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, System.Collections.Generic.List<long> pictureRelationIds) {
            return base.Channel.DeletePictureRelations(clientInformation, pictureRelationIds);
        }
        
        public ArtDatabanken.WebService.Data.WebPicture GetPictureById(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, long pictureId, int height, bool hasHeight, int width, bool hasWidth, long requestedSize, bool isRequestedSizeSpecified, string requestedFormat) {
            return base.Channel.GetPictureById(clientInformation, pictureId, height, hasHeight, width, hasWidth, requestedSize, isRequestedSizeSpecified, requestedFormat);
        }
        
        public ArtDatabanken.WebService.Data.WebPicture GetPictureByPictureFilename(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, string pictureFilename) {
            return base.Channel.GetPictureByPictureFilename(clientInformation, pictureFilename);
        }
        
        public ArtDatabanken.WebService.Data.WebPicture GetPictureByPictureStringId(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, long pictureStringId) {
            return base.Channel.GetPictureByPictureStringId(clientInformation, pictureStringId);
        }
        
        public ArtDatabanken.WebService.Data.WebPictureInformation GetPictureInformationById(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, long pictureId, int height, bool hasHeight, int width, bool hasWidth, System.Collections.Generic.List<int> metaDataIds) {
            return base.Channel.GetPictureInformationById(clientInformation, pictureId, height, hasHeight, width, hasWidth, metaDataIds);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebPictureInformation> GetPicturesInformationBySearchCriteria(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, ArtDatabanken.WebService.Data.WebPicturesSearchCriteria searchCriteria, int height, bool hasHeight, int width, bool hasWidth, long requestedSize, bool isRequestedSizeSpecified, string requestedFormat, System.Collections.Generic.List<int> metaDataIds) {
            return base.Channel.GetPicturesInformationBySearchCriteria(clientInformation, searchCriteria, height, hasHeight, width, hasWidth, requestedSize, isRequestedSizeSpecified, requestedFormat, metaDataIds);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebPictureMetaData> GetPictureMetaDataById(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, long pictureId, System.Collections.Generic.List<int> metaDataIds) {
            return base.Channel.GetPictureMetaDataById(clientInformation, pictureId, metaDataIds);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebPictureMetaDataInformation> GetAllRecommendedPicturesMetaData(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, int pictureRelationTypeId, System.Collections.Generic.List<int> metaDataIds) {
            return base.Channel.GetAllRecommendedPicturesMetaData(clientInformation, pictureRelationTypeId, metaDataIds);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebPictureMetaDataDescription> GetPictureMetaDataDescriptions(ArtDatabanken.WebService.Data.WebClientInformation clientInformation) {
            return base.Channel.GetPictureMetaDataDescriptions(clientInformation);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebPictureMetaDataDescription> GetPictureMetaDataDescriptionsByIds(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, System.Collections.Generic.List<int> pictureMetaDataDescriptionsIds) {
            return base.Channel.GetPictureMetaDataDescriptionsByIds(clientInformation, pictureMetaDataDescriptionsIds);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebPictureRelationDataType> GetPictureRelationDataTypes(ArtDatabanken.WebService.Data.WebClientInformation clientInformation) {
            return base.Channel.GetPictureRelationDataTypes(clientInformation);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebPictureRelation> GetPictureRelationsByObjectGuid(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, string objectGuid, int pictureRelationTypeId) {
            return base.Channel.GetPictureRelationsByObjectGuid(clientInformation, objectGuid, pictureRelationTypeId);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebPictureRelation> GetPictureRelationsByPictureId(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, long pictureId) {
            return base.Channel.GetPictureRelationsByPictureId(clientInformation, pictureId);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebPictureRelationType> GetPictureRelationTypes(ArtDatabanken.WebService.Data.WebClientInformation clientInformation) {
            return base.Channel.GetPictureRelationTypes(clientInformation);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebPicture> GetPicturesByIds(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, System.Collections.Generic.List<long> pictureIds, int height, bool hasHeight, int width, bool hasWidth, long requestedSize, bool isRequestedSizeSpecified, string requestedFormat) {
            return base.Channel.GetPicturesByIds(clientInformation, pictureIds, height, hasHeight, width, hasWidth, requestedSize, isRequestedSizeSpecified, requestedFormat);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebPicture> GetPictureBySearchCriteria(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, ArtDatabanken.WebService.Data.WebPicturesSearchCriteria searchCriteria) {
            return base.Channel.GetPictureBySearchCriteria(clientInformation, searchCriteria);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebPictureGuid> GetRecommendedPictureIdsByObjectGuid(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, System.Collections.Generic.List<string> objectGuids, int pictureRelationTypeId) {
            return base.Channel.GetRecommendedPictureIdsByObjectGuid(clientInformation, objectGuids, pictureRelationTypeId);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebPictureGuid> GetAllRecommendedPictureIds(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, int pictureRelationTypeId) {
            return base.Channel.GetAllRecommendedPictureIds(clientInformation, pictureRelationTypeId);
        }
        
        public System.Collections.Generic.List<ArtDatabanken.WebService.Data.WebResourceStatus> GetStatus(ArtDatabanken.WebService.Data.WebClientInformation clientInformation) {
            return base.Channel.GetStatus(clientInformation);
        }
        
        public ArtDatabanken.WebService.Data.WebLoginResponse Login(string userName, string password, string applicationIdentifier, bool isActivationRequired) {
            return base.Channel.Login(userName, password, applicationIdentifier, isActivationRequired);
        }
        
        public void Logout(ArtDatabanken.WebService.Data.WebClientInformation clientInformation) {
            base.Channel.Logout(clientInformation);
        }
        
        public bool Ping() {
            return base.Channel.Ping();
        }
        
        public void RollbackTransaction(ArtDatabanken.WebService.Data.WebClientInformation clientInformation) {
            base.Channel.RollbackTransaction(clientInformation);
        }
        
        public void StartTrace(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, string userName) {
            base.Channel.StartTrace(clientInformation, userName);
        }
        
        public void StartTransaction(ArtDatabanken.WebService.Data.WebClientInformation clientInformation, int timeout) {
            base.Channel.StartTransaction(clientInformation, timeout);
        }
        
        public void StopTrace(ArtDatabanken.WebService.Data.WebClientInformation clientInformation) {
            base.Channel.StopTrace(clientInformation);
        }
    }
}
