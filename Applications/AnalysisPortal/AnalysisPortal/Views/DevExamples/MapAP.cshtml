@model object

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
    <head>
        <title>Ext Js custom tooltip sample</title>
        <link href="~/Content/ext-all-slate-min.css" rel="stylesheet" type="text/css" />
        <link href="~/Content/bootstrap.css" rel="stylesheet" type="text/css" />
        <link href="~/Content/font-awesome.css" rel="stylesheet" type="text/css" />
        <link href="~/Content/AnalysisPortal.css" rel="stylesheet" type="text/css" />
        <link href="~/Content/Overrides.css" rel="stylesheet" type="text/css" />
        <script src="~/Scripts/jquery-2.1.4.js" type="text/javascript"></script>
        <script src="~/Scripts/extjs-4.2.1/ext-all.js" type="text/javascript"></script>
        <script src="~/Scripts/bootstrap.js" type="text/javascript"></script>
        <script src="~/Scripts/modernizr-2.5.3.js" type="text/javascript"></script>

        <script src="https://maps.google.com/maps/api/js?v=3.5&amp;sensor=false" type="text/javascript"></script>
        <script src='https://dev.virtualearth.net/mapcontrol/mapcontrol.ashx?v=6.3&mkt=nb-NO&s=1' type="text/javascript"></script>        

        <script src="~/Scripts/OpenLayers/OpenLayers.js" type="text/javascript"></script>
        

        <style type="text/css">
            body {                
                margin: 20px;                
            }
            div.info {
                margin: 10px;
            }
            .smallmap {
                width: 512px;
                height: 256px;
                border: 1px solid #ccc;
            }            
        </style>


        @*Visa fynd*@
        <script type="text/javascript">
// Följande kod ligger på .aspx-sidan
//            var ViewSightingMapLayers = [{ "id": "ViewSightingMapLayerGooglePhysical1", "initString": "new OpenLayers.Layer.Google(\"Google Physical\", { sphericalMercator: true, maxExtent: new OpenLayers.Bounds(-20037508.34,-20037508.34,20037508.34,20037508.34), type: google.maps.MapTypeId.TERRAIN, numZoomLevels: 15, minZoomLevel: 1 }, {transitionEffect: \"resize\"})" }, { "id": "ViewSightingMapLayerGoogleStreets2", "initString": "new OpenLayers.Layer.Google(\"Google Streets\",  { sphericalMercator: true, maxExtent: new OpenLayers.Bounds(-20037508.34,-20037508.34,20037508.34,20037508.34),numZoomLevels: 20, minZoomLevel: 1 }, {transitionEffect: \"resize\"})" }, { "id": "ViewSightingMapLayerGoogleHybrid3", "initString": "new OpenLayers.Layer.Google(\"Google Hybrid\",  { sphericalMercator: true, maxExtent: new OpenLayers.Bounds(-20037508.34,-20037508.34,20037508.34,20037508.34), type: google.maps.MapTypeId.HYBRID, numZoomLevels: 20, minZoomLevel: 1 }, {transitionEffect: \"resize\"})" }, { "id": "ViewSightingMapLayerSverige7", "initString": "new OpenLayers.Layer.WMS(\"Sverige\", \"/MetriaCache/MetriaWmsProxy?\", {layers: \"MetriaTatortPlus\", projection: \"EPSG:900913\", srs: \"EPSG:900913\", format: \"image/png\",numZoomLevels: 20,  minZoomLevel: 1}, {singleTile: false, ratio: 1, transitionEffect: \"resize\"} )" }, { "id": "ViewSightingMapLayerVisualEarthHybrid13", "initString": "new OpenLayers.Layer.VirtualEarth( \"Visual Earth\", { sphericalMercator: true, maxExtent: new OpenLayers.Bounds(-20037508.34,-20037508.34,20037508.34,20037508.34), animationEnabled: false, minZoomLevel: 1, maxZoomLevel: 20, \u0027type\u0027: VEMapStyle.Hybrid}, {transitionEffect: \"resize\"})"}];
//            var ViewSightingMap;
//            var ViewSightingMapOption = { "BaseMapOptions": { "maxScale": 423.186, "ShowMousePosition": false, "UseLayerSwitcher": true, "UseNavigationHistory": true, "displayProjection": new OpenLayers.Projection('EPSG:900913'), "maxExtent": new OpenLayers.Bounds(-20037508.34, -20037508.34, 20037508.34, 20037508.34), "maxResolution": 156543.0339, "projection": new OpenLayers.Projection('EPSG:900913'), "restrictedExtent": new OpenLayers.Bounds(-4011415.2436133, 7094497.748418, 7729312.2988867, 16321649.443418), "units": "m" }, "GetSitesGeoJsonUrl": "/ViewSighting/GetViewSightingAsMapGeoJsonSites", "Height": 400, "InitiateMapOnStart": true, "MapNavigationDiv": "mapNavDiv", "MapType": 0, "MinScaleForFullSiteRefresh": 12, "MinScaleForPublicSites": 12, "OvMapOptions": { "OvMapLayer": new OpenLayers.Layer.Google('Google Streets', { sphericalMercator: true, numZoomLevels: 20 }), "ShowOvMap": false, "UseOvMap": true, "displayProjection": new OpenLayers.Projection('EPSG:4326'), "maxExtent": new OpenLayers.Bounds(-20037508.34, -20037508.34, 20037508.34, 20037508.34), "maxResolution": 156543.0339, "projection": new OpenLayers.Projection('EPSG:900913'), "units": "m" }, "SelectByPolygon": false, "ShowCreateSiteTools": false, "ShowServerSessionSideSites": true, "ShowSpecificSites": false, "ShowSpecificSitesIds": null, "UserId": 33517, "Width": 950 };
//            var ViewSightingMapState = { "IsChanged": null, "SelectedCoordinateSystemId": 0, "CurrentMapExtent": { "MaxX": 3295925, "MaxY": 9095125, "MinX": 159437, "MinY": 7774499 }, "CenterX": 0, "CenterY": 0 };
//            $(document).ready(function () {
//                ViewSightingMap = initOpenlayersMap('ViewSightingMapDiv', 'mapNavDiv', ViewSightingMapOption, ViewSightingMapLayers, ViewSightingMapState);
//            });
//            var mapDefinitions = new Array();
//            function initMap(mapName) {
//                if (mapDefinitions != null) {
//                    for (i in mapDefinitions) {
//                        if (mapDefinitions[i].mapId == mapName) {
//                            return initOpenlayersMap(mapDefinitions[i].divId, mapDefinitions[i].controlsId, mapDefinitions[i].mapOption, mapDefinitions[i].mapLayers, mapDefinitions[i].mapState);
//                        }
//                    }
//                    return null;
//                }
//            }            
        </script>


@*        <select id="SightingViewModel_SiteViewModel_EditedCoordinateSystem_csgroup" name="SightingViewModel.SiteViewModel.EditedCoordinateSystem_csgroup"><option value="-1"> </option>
            <option value="1">SWEREF99 TM</option>
            <option value="2">UTM(ED50)</option>
            <option value="3">Geographic(WGS 84)</option>
            <option value="4">UTM(WGS 84)</option>
            <option value="5">Google Mercator</option>
            <option value="6">RT90 2.5 gon</option>
        </select>*@


        <script type="text/javascript">
            var theMapLayers = [{ "id": "theMapLayerGooglePhysical1", "initString": "new OpenLayers.Layer.Google(\"Google Physical\", { sphericalMercator: true, maxExtent: new OpenLayers.Bounds(-20037508.34,-20037508.34,20037508.34,20037508.34), type: google.maps.MapTypeId.TERRAIN, numZoomLevels: 15, minZoomLevel: 1 }, {transitionEffect: \"resize\"})" }, { "id": "theMapLayerGoogleStreets2", "initString": "new OpenLayers.Layer.Google(\"Google Streets\",  { sphericalMercator: true, maxExtent: new OpenLayers.Bounds(-20037508.34,-20037508.34,20037508.34,20037508.34),numZoomLevels: 20, minZoomLevel: 1 }, {transitionEffect: \"resize\"})" }, { "id": "theMapLayerGoogleHybrid3", "initString": "new OpenLayers.Layer.Google(\"Google Hybrid\",  { sphericalMercator: true, maxExtent: new OpenLayers.Bounds(-20037508.34,-20037508.34,20037508.34,20037508.34), type: google.maps.MapTypeId.HYBRID, numZoomLevels: 20, minZoomLevel: 1 }, {transitionEffect: \"resize\"})" }, { "id": "theMapLayerSverige7", "initString": "new OpenLayers.Layer.WMS(\"Sverige\", \"/MetriaCache/MetriaWmsProxy?\", {layers: \"MetriaTatortPlus\", projection: \"EPSG:900913\", srs: \"EPSG:900913\", format: \"image/png\",numZoomLevels: 20,  minZoomLevel: 1}, {singleTile: false, ratio: 1, transitionEffect: \"resize\"} )" }, { "id": "theMapLayerVisualEarthHybrid13", "initString": "new OpenLayers.Layer.VirtualEarth( \"Visual Earth\", { sphericalMercator: true, maxExtent: new OpenLayers.Bounds(-20037508.34,-20037508.34,20037508.34,20037508.34), animationEnabled: false, minZoomLevel: 1, maxZoomLevel: 20, \u0027type\u0027: VEMapStyle.Hybrid}, {transitionEffect: \"resize\"})"}];
            var theMap;
            var theMapOption = { "BaseMapOptions": { "maxScale": 423.186, "ShowMousePosition": false, "UseLayerSwitcher": true, "UseNavigationHistory": true, "displayProjection": new OpenLayers.Projection('EPSG:900913'), "maxExtent": new OpenLayers.Bounds(-20037508.34, -20037508.34, 20037508.34, 20037508.34), "maxResolution": 156543.0339, "projection": new OpenLayers.Projection('EPSG:900913'), "restrictedExtent": new OpenLayers.Bounds(-4011415.2436133, 7094497.748418, 7729312.2988867, 16321649.443418), "units": "m" }, "GetSitesGeoJsonUrl": "", "Height": 350, "InitiateMapOnStart": false, "MapNavigationDiv": "mapNavDiv", "MapType": 0, "MinScaleForFullSiteRefresh": 12, "MinScaleForPublicSites": 12, "OvMapOptions": { "OvMapLayer": new OpenLayers.Layer.Google('Google Streets', { sphericalMercator: true, numZoomLevels: 20 }), "ShowOvMap": false, "UseOvMap": true, "displayProjection": new OpenLayers.Projection('EPSG:4326'), "maxExtent": new OpenLayers.Bounds(-20037508.34, -20037508.34, 20037508.34, 20037508.34), "maxResolution": 156543.0339, "projection": new OpenLayers.Projection('EPSG:900913'), "units": "m" }, "SelectByPolygon": false, "ShowCreateSiteTools": true, "ShowServerSessionSideSites": false, "ShowSpecificSites": false, "ShowSpecificSitesIds": null, "UserId": 33517, "Width": 348 };
            var theMapState = { "IsChanged": null, "SelectedCoordinateSystemId": 0, "CurrentMapExtent": null, "CenterX": 0, "CenterY": 0 };
            
            var mapDefinitions = new Array();
            mapDefinitions['theMap'] = { mapId: 'theMap', divId: 'theMapDiv', controlsId: 'mapNavDiv', mapOption: theMapOption, mapLayers: theMapLayers, mapState: theMapState };
            
            function initMap(mapName) {
                if (mapDefinitions != null) {
                    for (i in mapDefinitions) {
                         if (mapDefinitions[i].mapId == mapName) {
                              return initOpenlayersMap(mapDefinitions[i].divId, mapDefinitions[i].controlsId, mapDefinitions[i].mapOption, mapDefinitions[i].mapLayers, mapDefinitions[i].mapState);
                         }
                    }
                    return null;
                }
            }
      
        </script>



        <script type="text/javascript">
            var lon = 5;
            var lat = 40;
            var zoom = 5;
            var map, layer;

            $(document).ready(function() {                           
                map = new OpenLayers.Map('map');
                layer = new OpenLayers.Layer.WMS("OpenLayers WMS",
                        "http://vmap0.tiles.osgeo.org/wms/vmap0",
                        { layers: 'basic' });
                map.addLayer(layer);
                map.setCenter(new OpenLayers.LonLat(lon, lat), zoom);
                var myFeatures = @Html.Raw(ViewBag.GeoJsonAsString);
                                               
                var geojson_format = new OpenLayers.Format.GeoJSON();
                var vector_layer = new OpenLayers.Layer.Vector();
                map.addLayer(vector_layer);
                vector_layer.addFeatures(geojson_format.read(myFeatures));                                        
            });
            
        </script>
    </head>
    <body>

        <h3>GeoJson with Json string written in page</h3>
        
        <div id="map" class="smallmap"></div>

        <div id="mapNavDiv" class="olControlPanel"></div>
        <div class="clear" id="theMapDiv" style="height: 350px; width: 348px; position:relative; z-index:400;"></div>

    </body>
</html>