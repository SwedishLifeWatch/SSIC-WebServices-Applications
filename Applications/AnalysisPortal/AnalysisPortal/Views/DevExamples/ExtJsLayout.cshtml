@model object

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
    <head>
        <title>Ext JS Grid sample</title>
        <link href="~/Content/ext-all-slate-min.css" rel="stylesheet" type="text/css" />      
        <script src="~/Scripts/extjs-4.2.1/ext-all.js" type="text/javascript" charset="utf-8"></script>                

        <script type="text/javascript">
            Ext.require(['*']);

            Ext.onReady(function () {

                // sample static data for the store
                var myData = [
                    ['3m Co', 71.72, 0.02, 0.03, '9/1 12:00am'],
                    ['Alcoa Inc', 29.01, 0.42, 1.47, '9/1 12:00am'],
                    ['Altria Group Inc', 83.81, 0.28, 0.34, '9/1 12:00am'],
                    ['American Express Company', 52.55, 0.01, 0.02, '9/1 12:00am'],
                    ['American International Group, Inc.', 64.13, 0.31, 0.49, '9/1 12:00am'],               
                    ['McDonald\'s Corporation', 36.76, 0.86, 2.40, '9/1 12:00am'],
                    ['Merck & Co., Inc.', 40.96, 0.41, 1.01, '9/1 12:00am'],
                    ['Microsoft Corporation', 25.84, 0.14, 0.54, '9/1 12:00am'],
                    ['Pfizer Inc', 27.96, 0.4, 1.45, '9/1 12:00am'],
                    ['The Coca-Cola Company', 45.07, 0.26, 0.58, '9/1 12:00am'],
                    ['The Home Depot, Inc.', 34.64, 0.35, 1.02, '9/1 12:00am'],
                    ['The Procter & Gamble Company', 61.91, 0.01, 0.02, '9/1 12:00am'],
                    ['United Technologies Corporation', 63.26, 0.55, 0.88, '9/1 12:00am'],
                    ['Verizon Communications', 35.57, 0.39, 1.11, '9/1 12:00am'],
                    ['Wal-Mart Stores, Inc.', 45.45, 0.73, 1.63, '9/1 12:00am']
                ];

                /**
                * Custom function used for column renderer
                * param {Object} val
                */
                function change(val) {
                    if (val > 0) {
                        return '<span style="color:green;">' + val + '</span>';
                    } else if (val < 0) {
                        return '<span style="color:red;">' + val + '</span>';
                    }
                    return val;
                }

                /**
                * Custom function used for column renderer
                * {Object} val
                */
                function pctChange(val) {
                    if (val > 0) {
                        return '<span style="color:green;">' + val + '%</span>';
                    } else if (val < 0) {
                        return '<span style="color:red;">' + val + '%</span>';
                    }
                    return val;
                }

                // create the data store
                var store = Ext.create('Ext.data.ArrayStore', {
                    fields: [
                       { name: 'company' },
                       { name: 'price', type: 'float' },
                       { name: 'change', type: 'float' },
                       { name: 'pctChange', type: 'float' },
                       { name: 'lastChange', type: 'date', dateFormat: 'n/j h:ia' }
                    ],
                    data: myData
                });

                // create the Grid
                var grid = Ext.create('Ext.grid.Panel', {
                    hideCollapseTool: true,
                    store: store,
                    columnLines: true,
                    columns: [
                        {
                            text: 'Company',
                            flex: 1,
                            sortable: false,
                            dataIndex: 'company'
                        },
                        {
                            text: 'Price',
                            width: 75,
                            sortable: true,
                            renderer: 'usMoney',
                            dataIndex: 'price'
                        },
                        {
                            text: 'Change',
                            width: 75,
                            sortable: true,
                            renderer: change,
                            dataIndex: 'change'
                        },
                        {
                            text: '% Change',
                            width: 75,
                            sortable: true,
                            renderer: pctChange,
                            dataIndex: 'pctChange'
                        },
                        {
                            text: 'Last Updated',
                            width: 85,
                            sortable: true,
                            renderer: Ext.util.Format.dateRenderer('m/d/Y'),
                            dataIndex: 'lastChange'
                        },
                        {
                            xtype: 'actioncolumn',
                            width: 50,
                            items: [{
                                icon: '../Content/images/delete.gif',  // Use a URL in the icon config
                                tooltip: 'Sell stock',
                                handler: function (grid, rowIndex, colIndex) {
                                    var rec = store.getAt(rowIndex);
                                    alert("Sell " + rec.get('company'));
                                }
                            }, {
                                getClass: function (v, meta, rec) {          // Or return a class from a function
                                    if (rec.get('change') < 0) {
                                        this.items[1].tooltip = 'Hold stock';
                                        return 'alert-col';
                                    } else {
                                        this.items[1].tooltip = 'Buy stock';
                                        return 'buy-col';
                                    }
                                },
                                handler: function (grid, rowIndex, colIndex) {
                                    var rec = store.getAt(rowIndex);
                                    alert((rec.get('change') < 0 ? "Hold " : "Buy ") + rec.get('company'));
                                }
                            }]
                        }
                    ],
                    title: 'Array Grid (Click header to collapse)',
                    viewConfig: {
                        stripeRows: true
                    }
                });

                var item1 = grid;

                var item2 = Ext.create('Ext.Panel', {
                    title: 'Accordion Item 2',
                    html: '&lt;empty panel&gt;',
                    cls: 'empty'
                });

                var item3 = Ext.create('Ext.Panel', {
                    title: 'Accordion Item 3',
                    html: '&lt;empty panel&gt;',
                    cls: 'empty'
                });

                var item4 = Ext.create('Ext.Panel', {
                    title: 'Accordion Item 4',
                    html: '&lt;empty panel&gt;',
                    cls: 'empty'
                });

                var item5 = Ext.create('Ext.Panel', {
                    title: 'Accordion Item 5',
                    html: '&lt;empty panel&gt;',
                    cls: 'empty'
                });

                var accordion = Ext.create('Ext.Panel', {
                    title: 'Accordion',
                    collapsible: true,
                    region: 'west',
                    margins: '5 0 5 5',
                    split: true,
                    width: 210,
                    layout: 'accordion',
                    items: [item1, item2, item3, item4, item5]
                });


                var panel = Ext.create('Ext.panel.Panel', {
                    layout: 'border',
                    renderTo: 'panelDiv', //Ext.getBody(),
                    width: 800,
                    height: 600,
                    items: [
                            accordion, {
                                region: 'center',
                                margins: '5 5 5 0',
                                cls: 'empty',
                                bodyStyle: 'background:#f1f1f1',
                                html: '<br/><br/>&lt;empty center panel&gt;'
                            }]
                });
            });                
        </script>

    </head>
    <body>
        <br/><br/><br/>
        <div id="panelDiv"></div>                  
        <br/><br/><br/>
    </body>
</html>